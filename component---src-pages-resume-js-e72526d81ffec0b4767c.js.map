{"version":3,"file":"component---src-pages-resume-js-e72526d81ffec0b4767c.js","mappings":"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","sources":["webpack://atharv-kulkarni/./src/pages/resume.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/badge/badge.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/container/container.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/grid/simple-grid.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/stack/h-stack.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/stack/v-stack.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/tag/tag.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/wrap/wrap.mjs"],"sourcesContent":["/* eslint-disable new-cap */\n// src/pages/index.js\nimport * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport {\n  Box,\n  Text,\n  Flex,\n  Link,\n  Icon,\n  Heading,\n  VStack,\n  HStack,\n  Badge,\n  Wrap,\n  WrapItem,\n  Tag,\n  SimpleGrid,\n  Container,\n  Button,\n  List,\n  ListItem,\n  ListIcon,\n} from '@chakra-ui/react'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { ChevronRightIcon } from '@chakra-ui/icons'\nimport {\n  FaEnvelope,\n  FaPhoneAlt,\n  FaLinkedin,\n  FaGithub,\n  FaGlobe,\n} from 'react-icons/fa'\n// import { AiOutlinePrinter } from 'react-icons/ai'\nimport { MdFileDownload } from 'react-icons/md'\n// import html2canvas from 'html2canvas'\n// import jsPDF from 'jspdf'\n\nimport Layout from '../components/Layout'\n\nimport '../styles/resume.module.scss'\nimport aboutMeData from '../data/aboutme.json'\n\nconst ResumePage = () => {\n  const ResumePDFData = useStaticQuery(graphql`\n    query {\n      pdfs: file(relativePath: { eq: \"Website Resume - Atharv Kulkarni.pdf\" }) {\n        name\n        publicURL\n      }\n    }\n  `)\n\n  const ResumePDF = ResumePDFData.pdfs.publicURL\n  const ResumePDFName = ResumePDFData.pdfs.name\n\n  return (\n    <Layout>\n      <Container maxW=\"container.md\" p={4}>\n        <Box mb={4} textAlign=\"right\">\n          <Button\n            leftIcon={<MdFileDownload />}\n            colorScheme=\"gray\"\n            variant=\"outline\"\n            _hover={{ bg: 'gray.700', color: 'white' }}\n            size=\"md\"\n            borderWidth=\"1px\"\n            borderColor=\"black\"\n            className=\"download-pdf-button\"\n          >\n            <Link\n              href={ResumePDF}\n              target=\"_blank\"\n              style={{ textDecoration: 'none' }}\n              download={ResumePDFName}\n            >\n              Download as PDF\n            </Link>\n          </Button>\n        </Box>\n        <Box\n          as=\"article\"\n          id=\"resume\"\n          p={4}\n          boxShadow=\"2xl\"\n          borderRadius=\"md\"\n          bg=\"white\"\n        >\n          {/* Intro section */}\n          <Box p={4} className=\"resume-section\">\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Text fontSize=\"4xl\" fontWeight=\"bold\">\n                  Atharv Kulkarni\n                </Text>\n                <Text fontSize=\"md\">\n                  Consultant at IBM, currently immersed in the realms of Workday\n                  integration and AI-driven application development.\n                </Text>\n\n                {/* Contact details */}\n                <Flex alignItems=\"left\" flexDirection=\"column\" mt={4}>\n                  <Box mb={1}>\n                    <Text fontSize=\"sm\">\n                      <Icon as={FaEnvelope} mx={4} />\n                      {aboutMeData.contactInfo.email}\n                    </Text>\n                  </Box>\n\n                  {/* <Box mb={1}>\n                    <Text fontSize=\"sm\">\n                      <Icon as={FaPhoneAlt} mx={4} />\n                      {aboutMeData.contactInfo.phone}\n                    </Text>\n                  </Box> */}\n\n                  <Box mb={1}>\n                    <Link\n                      href={`${aboutMeData.contactInfo.website.link}`}\n                      isExternal\n                    >\n                      <Text fontSize=\"sm\">\n                        <Icon as={FaGlobe} mx={4} />\n                        {aboutMeData.contactInfo.website.text}\n                      </Text>\n                    </Link>\n                  </Box>\n\n                  <Box mb={1}>\n                    <Link\n                      href={`${aboutMeData.contactInfo.linkedin.link}`}\n                      isExternal\n                    >\n                      <Text fontSize=\"sm\">\n                        <Icon as={FaLinkedin} mx={4} />\n                        {aboutMeData.contactInfo.linkedin.text}\n                      </Text>\n                    </Link>\n                  </Box>\n\n                  <Box mb={1}>\n                    <Link\n                      href={`${aboutMeData.contactInfo.github.link}`}\n                      isExternal\n                    >\n                      <Text fontSize=\"sm\">\n                        <Icon as={FaGithub} mx={4} />\n                        {aboutMeData.contactInfo.github.text}\n                      </Text>\n                    </Link>\n                  </Box>\n                </Flex>\n              </Box>\n              <Box maxWidth=\"250px\">\n                <StaticImage\n                  src=\"../assets/images/landingPageImg.png\"\n                  alt=\"Profile Photo\"\n                />\n              </Box>\n            </Flex>\n          </Box>\n\n          {/* About Section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={2}>\n              About\n            </Heading>\n            <Text fontSize=\"md\">\n              I'm <strong>Atharv Kulkarni</strong>, a dynamic and\n              forward-thinking <strong>Consultant at IBM</strong>, currently\n              immersed in the realms of Workday integration and AI-driven\n              application development. With a solid foundation in both\n              technology and business, I bring over a year of comprehensive\n              experience in consulting, paired with an{' '}\n              <strong>expertise in Workday and application development.</strong>\n            </Text>\n          </Box>\n\n          {/* Work experiences */}\n          <Box p={4} className=\"resume-section\">\n            <Heading className=\"item\" as=\"h3\" size=\"lg\" mb={4}>\n              Work Experience\n            </Heading>\n            <VStack spacing={5} align=\"stretch\">\n              {aboutMeData.workExperience.map((experience, index) => (\n                <Box\n                  key={index}\n                  className=\"item\"\n                  borderWidth=\"1px\"\n                  p={4}\n                  borderRadius=\"md\"\n                >\n                  <HStack justifyContent=\"space-between\">\n                    <Text fontWeight=\"bold\">\n                      {experience.role}{' '}\n                      <Badge colorScheme=\"green\" mr={2}>\n                        {experience.badge}\n                      </Badge>\n                    </Text>\n\n                    <Text fontSize=\"sm\">{experience.duration}</Text>\n                  </HStack>\n                  <HStack>\n                    <Text fontSize=\"md\">{experience.company}</Text>\n                  </HStack>\n                  <List spacing={3} mt={6}>\n                    {experience.points.map((point, indexNest) => (\n                      <ListItem key={indexNest} fontSize=\"sm\">\n                        <ListIcon as={ChevronRightIcon} color=\"arrowColor\" />\n                        {point}\n                      </ListItem>\n                    ))}\n                  </List>\n                </Box>\n              ))}\n            </VStack>\n          </Box>\n\n          {/* Certifications section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={4}>\n              Certifications\n            </Heading>\n            <SimpleGrid columns={{ sm: 1, md: 2, lg: 3 }} spacing={5}>\n              {aboutMeData.certifications.map((entry, index) => (\n                <Box\n                  key={index}\n                  borderWidth=\"1px\"\n                  p={4}\n                  borderRadius=\"lg\"\n                  boxShadow=\"md\"\n                >\n                  <Badge colorScheme=\"blue\" mb={2}>\n                    {entry.badge}\n                  </Badge>\n                  <Text fontWeight=\"bold\">{entry.name}</Text>\n                  <Text fontSize=\"sm\">{entry.validity}</Text>\n                </Box>\n              ))}\n            </SimpleGrid>\n          </Box>\n\n          {/* Skills section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={4}>\n              Skills\n            </Heading>\n            <SimpleGrid columns={{ sm: 1, md: 2, lg: 3 }} spacing={5}>\n              {Object.keys(aboutMeData.skills).map((entry, index) => (\n                <Box\n                  key={index}\n                  borderWidth=\"1px\"\n                  p={4}\n                  borderRadius=\"lg\"\n                  boxShadow=\"md\"\n                >\n                  <Badge colorScheme=\"purple\" mb={2}>\n                    {aboutMeData.skills[entry].title}\n                  </Badge>\n                  <Wrap my=\"5\">\n                    {aboutMeData.skills[entry].skills.map(skill => (\n                      <WrapItem key={skill}>\n                        <Tag\n                          size=\"md\"\n                          variant=\"solid\"\n                          colorScheme=\"purple\"\n                          borderRadius=\"full\"\n                        >\n                          {skill}\n                        </Tag>\n                      </WrapItem>\n                    ))}\n                  </Wrap>\n                </Box>\n              ))}\n            </SimpleGrid>\n          </Box>\n\n          {/* Project section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={4}>\n              Projects\n            </Heading>\n            <SimpleGrid columns={{ sm: 1, md: 2, lg: 3 }} spacing={5}>\n              {aboutMeData.projects.map((project, index) => (\n                <Box\n                  key={index}\n                  borderWidth=\"1px\"\n                  p={4}\n                  borderRadius=\"lg\"\n                  boxShadow=\"md\"\n                >\n                  <Badge colorScheme=\"green\" mb={2}>\n                    {project.badge}\n                  </Badge>\n                  <Text fontWeight=\"bold\">{project.name}</Text>\n                  <Text fontSize=\"sm\">{project.description}</Text>\n                </Box>\n              ))}\n            </SimpleGrid>\n          </Box>\n\n          {/* Education section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={4}>\n              Education\n            </Heading>\n            <VStack spacing={3} align=\"stretch\">\n              {aboutMeData.education.map((entry, index) => (\n                <Box borderWidth=\"1px\" p={4} borderRadius=\"md\">\n                  <Text fontWeight=\"bold\">{entry.institute}</Text>\n                  <Text fontSize=\"sm\">{entry.degree}</Text>\n                  <Text fontSize=\"sm\">{entry.timeline}</Text>\n                  {/* <Text fontSize=\"sm\">Grade: {entry.grade}</Text> */}\n                </Box>\n              ))}\n            </VStack>\n          </Box>\n        </Box>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default ResumePage\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport { Badge };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Container = forwardRef(\n  function Container2(props, ref) {\n    const { className, centerContent, ...rest } = omitThemingProps(props);\n    const styles = useStyleConfig(\"Container\", props);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-container\", className),\n        ...rest,\n        __css: {\n          ...styles,\n          ...centerContent && {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          }\n        }\n      }\n    );\n  }\n);\nContainer.displayName = \"Container\";\n\nexport { Container };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mapResponsive } from '@chakra-ui/utils';\nimport { Grid } from './grid.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nimport { getToken } from '../system/hooks.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport { SimpleGrid };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst HStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"row\", ref }));\nHStack.displayName = \"HStack\";\n\nexport { HStack };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport { VStack };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext } from '@chakra-ui/utils';\nimport { Icon } from '../icon/icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nconst Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */ jsx(TagStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(chakra.span, { ref, ...ownProps, __css: containerStyles }) });\n});\nTag.displayName = \"Tag\";\nconst TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */ jsx(chakra.span, { ref, noOfLines: 1, ...props, __css: styles.label });\n});\nTagLabel.displayName = \"TagLabel\";\nconst TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginEnd: \"0.5rem\", ...props }));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nconst TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginStart: \"0.5rem\", ...props }));\nTagRightIcon.displayName = \"TagRightIcon\";\nconst TagCloseIcon = (props) => /* @__PURE__ */ jsx(Icon, { verticalAlign: \"inherit\", viewBox: \"0 0 512 512\", ...props, children: /* @__PURE__ */ jsx(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }\n) });\nTagCloseIcon.displayName = \"TagCloseIcon\";\nconst TagCloseButton = forwardRef(\n  (props, ref) => {\n    const { isDisabled, children, ...rest } = props;\n    const styles = useTagStyles();\n    const btnStyles = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.closeButton\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.button,\n      {\n        ref,\n        \"aria-label\": \"close\",\n        ...rest,\n        type: \"button\",\n        disabled: isDisabled,\n        __css: btnStyles,\n        children: children || /* @__PURE__ */ jsx(TagCloseIcon, {})\n      }\n    );\n  }\n);\nTagCloseButton.displayName = \"TagCloseButton\";\n\nexport { Tag, TagCloseButton, TagLabel, TagLeftIcon, TagRightIcon, useTagStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useMemo, Children } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Wrap = forwardRef(function Wrap2(props, ref) {\n  const {\n    spacing = \"0.5rem\",\n    spacingX,\n    spacingY,\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const _children = useMemo(\n    () => shouldWrapChildren ? Children.map(children, (child, index) => /* @__PURE__ */ jsx(WrapItem, { children: child }, index)) : children,\n    [children, shouldWrapChildren]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { ref, className: cx(\"chakra-wrap\", className), ...rest, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      className: \"chakra-wrap__list\",\n      __css: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: justify,\n        alignItems: align,\n        flexDirection: direction,\n        listStyleType: \"none\",\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        padding: \"0\"\n      },\n      children: _children\n    }\n  ) });\n});\nWrap.displayName = \"Wrap\";\nconst WrapItem = forwardRef(\n  function WrapItem2(props, ref) {\n    const { className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.li,\n      {\n        ref,\n        __css: { display: \"flex\", alignItems: \"flex-start\" },\n        className: cx(\"chakra-wrap__listitem\", className),\n        ...rest\n      }\n    );\n  }\n);\nWrapItem.displayName = \"WrapItem\";\n\nexport { Wrap, WrapItem };\n"],"names":["ResumePage","ResumePDFData","useStaticQuery","ResumePDF","pdfs","publicURL","ResumePDFName","name","React","Layout","Container","maxW","p","Box","mb","textAlign","Button","leftIcon","MdFileDownload","colorScheme","variant","_hover","bg","color","size","borderWidth","borderColor","className","Link","href","target","style","textDecoration","download","as","id","boxShadow","borderRadius","Flex","alignItems","justifyContent","Text","fontSize","fontWeight","flexDirection","mt","Icon","FaEnvelope","mx","aboutMeData","isExternal","FaGlobe","FaLinkedin","FaGithub","maxWidth","StaticImage","src","alt","__imageData","require","Heading","VStack","spacing","align","map","experience","index","key","HStack","role","Badge","mr","badge","duration","company","List","points","point","indexNest","ListItem","ListIcon","ChevronRightIcon","SimpleGrid","columns","sm","md","lg","entry","validity","Object","keys","title","Wrap","my","skills","skill","WrapItem","Tag","project","description","institute","degree","timeline","props","ref","styles","rest","jsx","span","cx","__css","display","whiteSpace","verticalAlign","displayName","centerContent","div","spacingX","spacingY","minChildWidth","theme","templateColumns","width","value","_value","n","widthToColumns","count","gap","columnGap","rowGap","direction","TagStylesProvider","useTagStyles","errorMessage","ownProps","containerStyles","container","children","noOfLines","label","I","marginEnd","marginStart","TagCloseIcon","viewBox","fill","d","isDisabled","btnStyles","outline","closeButton","button","type","disabled","justify","shouldWrapChildren","_children","useMemo","Children","child","ul","flexWrap","listStyleType","padding","li"],"sourceRoot":""}