{"version":3,"file":"component---src-pages-projects-js-ad126b572606a2e60476.js","mappings":"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","sources":["webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-QJDVAY5Z.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/icons/dist/chunk-PK3U2DQU.mjs","webpack://atharv-kulkarni/./src/components/ProjectsSection.js","webpack://atharv-kulkarni/./src/components/TableOfContents.js","webpack://atharv-kulkarni/./src/components/Projects.js","webpack://atharv-kulkarni/./src/pages/projects.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs"],"sourcesContent":["import {\n  Grid\n} from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n","// src/ArrowForward.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ArrowForwardIcon = createIcon({\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\",\n  displayName: \"ArrowForwardIcon\"\n});\n\nexport {\n  ArrowForwardIcon\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { Box, Button, Heading, SimpleGrid, IconButton } from '@chakra-ui/react'\nimport { ArrowForwardIcon } from '@chakra-ui/icons'\nimport ProjectCard from './ProjectCard'\n\nimport * as projectsStyles from '../styles/projects.module.scss'\n\nconst ProjectsSection = ({ section, projects }) => (\n  <Box\n    my={8}\n    display=\"flex\"\n    flexDirection=\"column\"\n    justifyContent=\"center\"\n    id={section}\n    borderTop={1}\n    borderRight={1}\n    borderWidth={1}\n    borderColor=\"blackAlpha.300\"\n    borderRadius=\"lg\"\n    p={6}\n    mx={4}\n  >\n    <Heading\n      as=\"h2\"\n      size=\"xl\"\n      mb={4}\n      mx={4}\n      textAlign=\"center\"\n      alignSelf=\"flex-start\"\n    >\n      {section}\n    </Heading>\n    <SimpleGrid columns={{ base: 1, md: 2 }} gap={4} justifyContent=\"center\">\n      {projects.slice(0, 2).map(project => (\n        <ProjectCard key={project.slug} project={project} />\n      ))}\n    </SimpleGrid>\n    {projects.length > 2 && (\n      <Box textAlign=\"center\" mt={4}>\n        <Link to={`/sections/${section}`}>\n          {/* <Button variant=\"outline\">See all</Button> */}\n          <IconButton\n            size=\"md\"\n            fontSize=\"lg\"\n            variant=\"outline\"\n            colorScheme=\"red\"\n            isRound\n            icon={<ArrowForwardIcon />}\n            aria-label=\"Explore more projects\"\n          />\n        </Link>\n      </Box>\n    )}\n  </Box>\n)\n\nexport default ProjectsSection\n","/* eslint-disable react/prop-types */\n// TableOfContents.js\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { Box, SimpleGrid, Button, Heading } from '@chakra-ui/react'\n\nconst TableOfContents = ({ sectionGroups }) => (\n  <Box p={5} mx={4} rounded=\"md\" marginBottom={5} textAlign=\"center\">\n    <Box maxW=\"600px\" margin=\"auto\">\n      <SimpleGrid columns={{ base: 2 }} spacing={5}>\n        {Object.keys(sectionGroups).map(section => (\n          <Link key={section} to={`#${section}`}>\n            <Button variant=\"outline\" colorScheme=\"red\" w=\"100%\">\n              {section}\n            </Button>\n          </Link>\n        ))}\n      </SimpleGrid>\n    </Box>\n  </Box>\n)\n\nexport default TableOfContents\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Box, Heading } from '@chakra-ui/react'\nimport * as projectsStyles from '../styles/projects.module.scss'\nimport ProjectsSection from './ProjectsSection'\nimport TableOfContents from './TableOfContents'\n\nconst Projects = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/projects/\" } }) {\n        nodes {\n          frontmatter {\n            title\n            description\n            sections\n            slug\n            imageurl {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED)\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const allProjects = data.allMarkdownRemark.nodes.map(node => ({\n    ...node.frontmatter,\n    slug: node.frontmatter.slug,\n  }))\n\n  const sectionGroups = allProjects.reduce((groups, project) => {\n    project.sections.forEach(section => {\n      groups[section] = groups[section] || []\n      groups[section].push(project)\n    })\n    return groups\n  }, {})\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n      <Heading as=\"h1\" size=\"3xl\" my={40} textAlign=\"center\">\n        My Projects\n      </Heading>\n      <TableOfContents sectionGroups={sectionGroups} />\n      {Object.entries(sectionGroups).map(([section, projects]) => (\n        <ProjectsSection key={section} section={section} projects={projects} />\n      ))}\n    </Box>\n  )\n}\n\nexport default Projects\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Projects from '../components/Projects'\n\nexport default function ProjectsPage({ data }) {\n  return (\n    <Layout>\n      <Projects projects={data.projects.nodes} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          slug\n          sections\n        }\n      }\n    }\n  }\n`\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n"],"names":["SimpleGrid","props","ref","columns","spacingX","spacingY","spacing","minChildWidth","rest","theme","templateColumns","width","value","_value","n","widthToColumns","count","jsx","gap","columnGap","rowGap","displayName","ArrowForwardIcon","d","_ref","section","projects","React","Box","my","display","flexDirection","justifyContent","id","borderTop","borderRight","borderWidth","borderColor","borderRadius","p","mx","Heading","as","size","mb","textAlign","alignSelf","base","md","slice","map","project","ProjectCard","key","slug","length","mt","Link","to","IconButton","fontSize","variant","colorScheme","isRound","icon","sectionGroups","rounded","marginBottom","maxW","margin","Object","keys","Button","w","Projects","useStaticQuery","allMarkdownRemark","nodes","node","frontmatter","reduce","groups","sections","forEach","push","TableOfContents","entries","ProjectsSection","ProjectsPage","data","Layout","styles","className","h2","cx","__css"],"sourceRoot":""}