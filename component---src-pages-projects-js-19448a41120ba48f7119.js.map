{"version":3,"file":"component---src-pages-projects-js-19448a41120ba48f7119.js","mappings":"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","sources":["webpack://atharv-kulkarni/./node_modules/@chakra-ui/icons/dist/esm/ArrowForward.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/transition/slide-fade.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/transition/scale-fade.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/modal/modal-transition.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/modal/modal-content.mjs","webpack://atharv-kulkarni/./src/components/ProjectComponents/ProjectsSection.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/hooks/dist/esm/use-disclosure.mjs","webpack://atharv-kulkarni/./src/components/ProjectComponents/TableOfContents.js","webpack://atharv-kulkarni/./src/components/ProjectComponents/Projects.js","webpack://atharv-kulkarni/./src/pages/projects.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/grid/simple-grid.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/typography/heading.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/utils/dist/esm/responsive.mjs"],"sourcesContent":["import { createIcon } from '@chakra-ui/react';\n\nconst ArrowForwardIcon = createIcon({\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\",\n  displayName: \"ArrowForwardIcon\"\n});\n\nexport { ArrowForwardIcon };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { forwardRef } from 'react';\nimport { withDelay, TRANSITION_DEFAULTS } from './transition-utils.mjs';\n\nconst variants = {\n  initial: ({ offsetX, offsetY, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    x: offsetX,\n    y: offsetY,\n    transition: transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n    transitionEnd: transitionEnd?.exit\n  }),\n  enter: ({ transition, transitionEnd, delay }) => ({\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition: transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter\n  }),\n  exit: ({ offsetY, offsetX, transition, transitionEnd, reverse, delay }) => {\n    const offset = { x: offsetX, y: offsetY };\n    return {\n      opacity: 0,\n      transition: transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      ...reverse ? { ...offset, transitionEnd: transitionEnd?.exit } : { transitionEnd: { ...offset, ...transitionEnd?.exit } }\n    };\n  }\n};\nconst slideFadeConfig = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nconst SlideFade = forwardRef(\n  function SlideFade2(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      className,\n      offsetX = 0,\n      offsetY = 8,\n      transition,\n      transitionEnd,\n      delay,\n      animatePresenceProps,\n      ...rest\n    } = props;\n    const show = unmountOnExit ? isOpen && unmountOnExit : true;\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n    const custom = {\n      offsetX,\n      offsetY,\n      reverse,\n      transition,\n      transitionEnd,\n      delay\n    };\n    return /* @__PURE__ */ jsx(AnimatePresence, { ...animatePresenceProps, custom, children: show && /* @__PURE__ */ jsx(\n      motion.div,\n      {\n        ref,\n        className: cx(\"chakra-offset-slide\", className),\n        custom,\n        ...slideFadeConfig,\n        animate,\n        ...rest\n      }\n    ) });\n  }\n);\nSlideFade.displayName = \"SlideFade\";\n\nexport { SlideFade, slideFadeConfig };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { forwardRef } from 'react';\nimport { withDelay, TRANSITION_DEFAULTS } from './transition-utils.mjs';\n\nconst variants = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...reverse ? { scale: initialScale, transitionEnd: transitionEnd?.exit } : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } },\n    transition: transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay)\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition: transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter\n  })\n};\nconst scaleFadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nconst ScaleFade = forwardRef(\n  function ScaleFade2(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      animatePresenceProps,\n      ...rest\n    } = props;\n    const show = unmountOnExit ? isOpen && unmountOnExit : true;\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n    const custom = { initialScale, reverse, transition, transitionEnd, delay };\n    return /* @__PURE__ */ jsx(AnimatePresence, { ...animatePresenceProps, custom, children: show && /* @__PURE__ */ jsx(\n      motion.div,\n      {\n        ref,\n        className: cx(\"chakra-offset-slide\", className),\n        ...scaleFadeConfig,\n        animate,\n        custom,\n        ...rest\n      }\n    ) });\n  }\n);\nScaleFade.displayName = \"ScaleFade\";\n\nexport { ScaleFade, scaleFadeConfig };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { motion } from 'framer-motion';\nimport { forwardRef } from 'react';\nimport { slideFadeConfig } from '../transition/slide-fade.mjs';\nimport { scaleFadeConfig } from '../transition/scale-fade.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst transitions = {\n  slideInBottom: {\n    ...slideFadeConfig,\n    custom: { offsetY: 16, reverse: true }\n  },\n  slideInRight: {\n    ...slideFadeConfig,\n    custom: { offsetX: 16, reverse: true }\n  },\n  slideInTop: {\n    ...slideFadeConfig,\n    custom: { offsetY: -16, reverse: true }\n  },\n  slideInLeft: {\n    ...slideFadeConfig,\n    custom: { offsetX: -16, reverse: true }\n  },\n  scale: {\n    ...scaleFadeConfig,\n    custom: { initialScale: 0.95, reverse: true }\n  },\n  none: {}\n};\nconst MotionSection = chakra(motion.section);\nconst getMotionProps = (preset) => {\n  return transitions[preset || \"none\"];\n};\nconst ModalTransition = forwardRef(\n  (props, ref) => {\n    const { preset, motionProps = getMotionProps(preset), ...rest } = props;\n    return /* @__PURE__ */ jsx(MotionSection, { ref, ...motionProps, ...rest });\n  }\n);\nModalTransition.displayName = \"ModalTransition\";\n\nexport { ModalTransition };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { useModalContext, useModalStyles } from './modal.mjs';\nimport { ModalFocusScope } from './modal-focus.mjs';\nimport { ModalTransition } from './modal-transition.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst ModalContent = forwardRef(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      containerProps: rootProps,\n      motionProps,\n      ...rest\n    } = props;\n    const { getDialogProps, getDialogContainerProps } = useModalContext();\n    const dialogProps = getDialogProps(rest, ref);\n    const containerProps = getDialogContainerProps(rootProps);\n    const _className = cx(\"chakra-modal__content\", className);\n    const styles = useModalStyles();\n    const dialogStyles = defineStyle({\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog\n    });\n    const dialogContainerStyles = defineStyle({\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"$100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer\n    });\n    const { motionPreset } = useModalContext();\n    return /* @__PURE__ */ jsx(ModalFocusScope, { children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...containerProps,\n        className: \"chakra-modal__content-container\",\n        tabIndex: -1,\n        __css: dialogContainerStyles,\n        children: /* @__PURE__ */ jsx(\n          ModalTransition,\n          {\n            preset: motionPreset,\n            motionProps,\n            className: _className,\n            ...dialogProps,\n            __css: dialogStyles,\n            children\n          }\n        )\n      }\n    ) });\n  }\n);\nModalContent.displayName = \"ModalContent\";\n\nexport { ModalContent };\n","/* eslint-disable react/prop-types */\nimport { ArrowForwardIcon } from '@chakra-ui/icons'\nimport {\n  Box,\n  Heading,\n  IconButton,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  SimpleGrid,\n  useDisclosure,\n} from '@chakra-ui/react'\nimport { Link } from 'gatsby'\nimport React from 'react'\n\nimport { motion } from 'framer-motion'\n\nimport ProjectCard from './ProjectCard.tsx'\n\n// import * as projectsStyles from '../../styles/projects.module.scss'\n\nconst ProjectsSection = ({ section, projects }) => {\n  const formattedSection = section\n    // Replace all hyphens with spaces\n    .replace(/-/g, ' ')\n    // Capitalize the first letter of each word\n    .replace(/\\b\\w/g, letter => letter.toUpperCase())\n\n  const MotionIconButton = motion(IconButton)\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  return (\n    <Box\n      my={4}\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      id={section}\n      borderRadius=\"lg\"\n      p={6}\n      mx={4}\n    >\n      <SimpleGrid\n        columns={{ base: 1, md: 2 }}\n        templateColumns={['repeat(1, 1fr)', '9fr 1fr']}\n        gap={4}\n        justifyContent=\"center\"\n      >\n        <Box mb={5}>\n          <Box position=\"relative\" display=\"inline-block\" mx={4}>\n            <Heading as=\"h2\" size=\"lg\">\n              {formattedSection}\n            </Heading>\n            <Box\n              as=\"span\"\n              position=\"absolute\"\n              bottom=\"0\"\n              left=\"0\"\n              right=\"0\"\n              height=\"0.2rem\"\n              bgGradient=\"linear(to-r, purple.300, purple.200)\"\n              borderRadius=\"sm\"\n            />\n          </Box>\n        </Box>\n        {/* <Heading as=\"h2\" size=\"lg\" mx={4}>\n          {formattedSection}\n        </Heading> */}\n        {projects.length > 2 && (\n          <Box textAlign=\"center\">\n            {/* <Link\n              to={`/sections/${section}`}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                textDecoration: 'none',\n              }}\n            > */}\n            <MotionIconButton\n              onClick={onOpen}\n              size=\"md\"\n              fontSize=\"lg\"\n              variant=\"outline\"\n              colorScheme=\"purple\"\n              isRound\n              icon={<ArrowForwardIcon />}\n              aria-label=\"Explore more projects\"\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n            />\n            {/* </Link> */}\n          </Box>\n        )}\n      </SimpleGrid>\n      <SimpleGrid columns={{ base: 1, md: 2 }} gap={4} justifyContent=\"center\">\n        {projects\n          .filter(project => project.onProjectsPage === true)\n          .map(project => (\n            <ProjectCard key={project.slug} project={project} />\n          ))}\n      </SimpleGrid>\n\n      <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"4xl\">\n        <ModalOverlay />\n        <ModalContent\n          my={6}\n          maxHeight=\"calc(100% - 3rem)\"\n          overflowY=\"auto\"\n          shadow=\"xl\"\n        >\n          <ModalHeader>\n            <Box mt={3}>\n              <Box position=\"relative\" display=\"inline-block\" mx={4}>\n                <Heading as=\"h2\" size=\"md\">\n                  {formattedSection} Projects\n                </Heading>\n                <Box\n                  as=\"span\"\n                  position=\"absolute\"\n                  bottom=\"0\"\n                  left=\"0\"\n                  right=\"0\"\n                  height=\"0.15rem\"\n                  bgGradient=\"linear(to-r, purple.300, purple.200)\"\n                  borderRadius=\"sm\"\n                  opacity={0.5}\n                />\n              </Box>\n            </Box>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody mb={3}>\n            <SimpleGrid\n              columns={{ base: 1, md: 2 }}\n              gap={4}\n              justifyContent=\"center\"\n            >\n              {projects.map(project => (\n                <ProjectCard key={project.slug} project={project} />\n              ))}\n            </SimpleGrid>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </Box>\n  )\n}\n\nexport default ProjectsSection\n","'use client';\nimport { useCallbackRef } from './use-callback-ref.mjs';\nimport { useState, useId, useCallback } from 'react';\n\nfunction useDisclosure(props = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const handleOpen = useCallbackRef(onOpenProp);\n  const handleClose = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const isOpen = isOpenProp !== void 0 ? isOpenProp : isOpenState;\n  const isControlled = isOpenProp !== void 0;\n  const uid = useId();\n  const id = idProp ?? `disclosure-${uid}`;\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    handleClose?.();\n  }, [isControlled, handleClose]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    handleOpen?.();\n  }, [isControlled, handleOpen]);\n  const onToggle = useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      onOpen();\n    }\n  }, [isOpen, onOpen, onClose]);\n  function getButtonProps(props2 = {}) {\n    return {\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick(event) {\n        props2.onClick?.(event);\n        onToggle();\n      }\n    };\n  }\n  function getDisclosureProps(props2 = {}) {\n    return {\n      ...props2,\n      hidden: !isOpen,\n      id\n    };\n  }\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps,\n    getDisclosureProps\n  };\n}\n\nexport { useDisclosure };\n","/* eslint-disable react/prop-types */\n// TableOfContents.js\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { Box, SimpleGrid, Button } from '@chakra-ui/react'\n\nconst TableOfContents = ({ sectionGroups }) => (\n  <SimpleGrid columns={{ base: 1 }} gap={6} justifyContent=\"center\" mt={10}>\n    {Object.keys(sectionGroups).map(section => {\n      const formattedSectionGroup = section\n        // Replace all hyphens with spaces\n        .replace(/-/g, ' ')\n        // Capitalize the first letter of each word\n        .replace(/\\b\\w/g, letter => letter.toUpperCase())\n\n      return (\n        <Box\n          boxShadow=\"md\"\n          borderRadius=\"md\"\n          borderColor=\"gray.200\"\n          width=\"80%\"\n          mx=\"auto\"\n        >\n          <Link key={section} to={`#${section}`}>\n            <Button variant=\"ghost\" colorScheme=\"purple\" w=\"100%\">\n              {formattedSectionGroup}\n            </Button>\n          </Link>\n        </Box>\n      )\n    })}\n  </SimpleGrid>\n  // </Box>\n)\n\nexport default TableOfContents\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { Box, Heading, Grid } from '@chakra-ui/react'\nimport * as projectsStyles from '../../styles/projects.module.scss'\nimport ProjectsSection from './ProjectsSection'\nimport TableOfContents from './TableOfContents'\n\nconst Projects = props => {\n  const { projects } = props\n\n  const allProjects = projects.map(node => ({\n    ...node.frontmatter,\n  }))\n\n  const sectionGroups = allProjects.reduce((groups, project) => {\n    project.sections.forEach(section => {\n      groups[section] = groups[section] || []\n      groups[section].push(project)\n    })\n    return groups\n  }, {})\n\n  return (\n    <Box maxW=\"1300px\" m=\"0 auto\" p={5}>\n      <Grid\n        templateColumns={['repeat(1, 1fr)', '1fr 3fr']} // 1 column on small screens, 3 columns on larger screens\n        gap={4} // Space between grid items\n      >\n        <Box mt={10}>\n          <Box mb={5} textAlign=\"center\">\n            <Box position=\"relative\" display=\"inline-block\">\n              <Heading as=\"h1\" size=\"lg\">\n                Project Sections\n              </Heading>\n              <Box\n                as=\"span\"\n                position=\"absolute\"\n                bottom=\"0\"\n                left=\"0\"\n                right=\"0\"\n                height=\"0.15rem\"\n                bgGradient=\"linear(to-r, purple.300, purple.200)\"\n                borderRadius=\"sm\"\n                opacity={0.6}\n              />\n            </Box>\n          </Box>\n          <TableOfContents sectionGroups={sectionGroups} />\n        </Box>\n\n        <Box overflowX=\"auto\">\n          {Object.entries(sectionGroups).map(([section, nprojects]) => (\n            <ProjectsSection\n              key={section}\n              section={section}\n              projects={nprojects}\n            />\n          ))}\n        </Box>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Projects\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Projects from '../components/ProjectComponents/Projects'\n\nexport default function ProjectsPage({ data }) {\n  return (\n    <Layout>\n      <Projects projects={data.projects.nodes} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          description\n          sections\n          slug\n          cardBadge\n          cardBadgeColorScheme\n          onProjectsPage\n        }\n      }\n    }\n  }\n`\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mapResponsive } from '@chakra-ui/utils';\nimport { Grid } from './grid.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nimport { getToken } from '../system/hooks.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport { SimpleGrid };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Heading = forwardRef(\n  function Heading2(props, ref) {\n    const styles = useStyleConfig(\"Heading\", props);\n    const { className, ...rest } = omitThemingProps(props);\n    return /* @__PURE__ */ jsx(\n      chakra.h2,\n      {\n        ref,\n        className: cx(\"chakra-heading\", props.className),\n        ...rest,\n        __css: styles\n      }\n    );\n  }\n);\nHeading.displayName = \"Heading\";\n\nexport { Heading };\n","import { isObject } from './is.mjs';\n\nconst breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => obj[br] ?? null);\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nconst isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport { arrayToObjectNotation, breakpoints, isCustomBreakpoint, isResponsiveObjectLike, mapResponsive, objectToArrayNotation };\n"],"names":["ArrowForwardIcon","d","displayName","slideFadeConfig","initial","animate","exit","variants","offsetX","offsetY","transition","transitionEnd","delay","opacity","x","y","enter","reverse","offset","forwardRef","props","ref","unmountOnExit","in","isOpen","className","animatePresenceProps","rest","show","custom","jsx","AnimatePresence","children","motion","div","cx","scaleFadeConfig","initialScale","scale","transitions","slideInBottom","slideInRight","slideInTop","slideInLeft","none","MotionSection","section","getMotionProps","preset","ModalTransition","motionProps","ModalContent","containerProps","rootProps","getDialogProps","getDialogContainerProps","dialogProps","_className","styles","dialogStyles","display","flexDirection","position","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","motionPreset","tabIndex","__css","_ref","projects","formattedSection","replace","letter","toUpperCase","MotionIconButton","IconButton","onOpen","onClose","onCloseProp","onOpenProp","isOpenProp","id","idProp","handleOpen","handleClose","isOpenState","setIsOpen","useState","defaultIsOpen","isControlled","uid","useId","useCallback","onToggle","getButtonProps","props2","onClick","event","getDisclosureProps","hidden","useDisclosure","React","Box","my","justifyContent","borderRadius","p","mx","SimpleGrid","columns","base","md","templateColumns","gap","mb","Heading","as","size","bottom","right","bgGradient","length","textAlign","fontSize","variant","colorScheme","isRound","icon","whileHover","whileTap","filter","project","onProjectsPage","map","ProjectCard","key","slug","Modal","isCentered","ModalOverlay","maxHeight","overflowY","shadow","ModalHeader","mt","ModalCloseButton","ModalBody","sectionGroups","Object","keys","formattedSectionGroup","boxShadow","borderColor","Link","to","Button","w","node","frontmatter","reduce","groups","sections","forEach","push","maxW","m","Grid","TableOfContents","overflowX","entries","nprojects","ProjectsSection","ProjectsPage","data","Layout","Projects","nodes","spacingX","spacingY","spacing","minChildWidth","theme","value","_value","n","widthToColumns","count","columnGap","rowGap","h2","breakpoints","freeze","mapResponsive","prop","mapper","Array","isArray","item","result","arrayToObjectNotation","values","bps","index"],"sourceRoot":""}