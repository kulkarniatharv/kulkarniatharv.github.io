{"version":3,"file":"component---src-templates-project-js-6cc0e2f8986686eb0645.js","mappings":"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","sources":["webpack://atharv-kulkarni/./node_modules/@chakra-ui/image/dist/chunk-X3PS6RUF.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/image/dist/chunk-SPIKMR6I.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/image/dist/chunk-QINAG4RG.mjs","webpack://atharv-kulkarni/./src/templates/project.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-2OOHT3W5.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["'use client'\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport {\n  NativeImage\n};\n//# sourceMappingURL=chunk-X3PS6RUF.mjs.map","'use client'\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n//# sourceMappingURL=chunk-SPIKMR6I.mjs.map","'use client'\nimport {\n  NativeImage\n} from \"./chunk-X3PS6RUF.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-SPIKMR6I.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n//# sourceMappingURL=chunk-QINAG4RG.mjs.map","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport { Box, Image, Text } from '@chakra-ui/react'\nimport Layout from '../components/Layout'\n\nconst ProjectTemplate = ({ data }) => {\n  const project = data.markdownRemark.frontmatter\n\n  return (\n    <Box>\n      <Image src={project.image} alt={project.title} />\n      <Text fontWeight=\"bold\" fontSize=\"xl\" mb={2}>\n        {project.title}\n      </Text>\n      <Text>{project.description}</Text>\n    </Box>\n  )\n}\n\nexport const query = graphql`\n  query ($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n        description\n        imageurl {\n          childImageSharp {\n            gatsbyImageData(layout: CONSTRAINED)\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectTemplate\n","'use client'\n\n// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n//# sourceMappingURL=chunk-2OOHT3W5.mjs.map","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["NativeImage","props","ref","htmlWidth","htmlHeight","alt","rest","jsx","width","height","displayName","omit","object","keysToOmit","clone","Object","assign","key","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","as","className","_ref","data","project","markdownRemark","frontmatter","React","Box","image","title","Text","fontWeight","fontSize","mb","description","styles","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","p","cx","__css"],"sourceRoot":""}