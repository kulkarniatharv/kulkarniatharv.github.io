{"version":3,"file":"component---src-pages-about-js-d65e1cebd0ee168d2cb7.js","mappings":"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","sources":["webpack://atharv-kulkarni/./src/components/Timeline/TimelineItem.js","webpack://atharv-kulkarni/./src/components/AboutComponents/Sections/IntroSection.js","webpack://atharv-kulkarni/./src/components/AboutComponents/Sections/ProfessionalJourneySection.js","webpack://atharv-kulkarni/./src/components/AboutComponents/SkillIcon.js","webpack://atharv-kulkarni/./src/components/AboutComponents/Sections/KeySkillsSection.js","webpack://atharv-kulkarni/./src/components/AboutComponents/Sections/CertificationsBadgesSection.js","webpack://atharv-kulkarni/./src/components/AboutComponents/Sections/EducationSection.js","webpack://atharv-kulkarni/./src/components/AboutComponents/Sections/AccoladesSection.js","webpack://atharv-kulkarni/./src/pages/about.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/badge/badge.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/grid/grid-item.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/grid/simple-grid.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/stack/v-stack.mjs"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { Box, Text, Heading, List, ListIcon, ListItem } from '@chakra-ui/react'\nimport { ChevronRightIcon } from '@chakra-ui/icons'\n\nconst TimelineItem = ({ company, role, duration, points }) => (\n  <Box position=\"relative\" mb={5}>\n    <Box\n      width=\"2px\"\n      bg=\"blue.500\"\n      position=\"absolute\"\n      left=\"10px\"\n      top=\"0\"\n      bottom=\"2\"\n    />\n    <Box pl={8}>\n      <Heading size=\"md\" as=\"h3\" mb={2}>\n        {company}\n      </Heading>\n      <Text fontSize=\"sm\" mb={1}>\n        {role}\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.600\" mb={4}>\n        {duration}\n      </Text>\n      <List spacing={3} mt={6}>\n        {points.map((point, index) => (\n          <ListItem key={index} fontSize=\"sm\">\n            <ListIcon as={ChevronRightIcon} color=\"arrowColor\" />\n            {point}\n          </ListItem>\n        ))}\n      </List>\n      {/* </VStack> */}\n    </Box>\n    <Box\n      width=\"20px\"\n      height=\"20px\"\n      bg=\"blue.500\"\n      borderRadius=\"full\"\n      position=\"absolute\"\n      left=\"1px\"\n      top=\"0\"\n    />\n  </Box>\n)\n\nexport default TimelineItem\n","import React from 'react'\nimport { SimpleGrid, Flex, Text } from '@chakra-ui/react'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nconst IntroSection = props => (\n  <SimpleGrid\n    gridTemplateColumns={{ sm: '1fr', md: '2fr 1fr' }}\n    spacing={5}\n    placeItems=\"center\"\n    id=\"intro\"\n  >\n    <Flex flexDirection=\"column\" pl={4} justifyContent=\"center\">\n      <Text mb={3}>Hello!</Text>\n      <Text mb={3}>\n        I'm <strong>Atharv Kulkarni</strong>, a dynamic and forward-thinking{' '}\n        <strong>Consultant at IBM</strong>, currently immersed in the realms of\n        Workday integration and AI-driven application development.\n      </Text>\n      <Text>\n        With a solid foundation in both technology and business, I bring over a\n        year of comprehensive experience in consulting, paired with an{' '}\n        <strong>expertise in Workday and application development.</strong>\n      </Text>\n    </Flex>\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      maxWidth=\"350px\"\n      mb={10}\n    >\n      {/* <GatsbyImage image={landingPageImg} alt=\"Profile Photo\" /> */}\n      <StaticImage\n        src=\"../../../assets/images/landingPageImg.png\"\n        alt=\"Profile Photo\"\n      />\n    </Flex>\n  </SimpleGrid>\n)\n\nexport default IntroSection\n","import React from 'react'\nimport { Heading, Box } from '@chakra-ui/react'\nimport TimelineItem from '../../Timeline/TimelineItem'\n\nimport aboutMeData from '../../../data/aboutme.json'\n\nconst ProfessionalJourneySection = props => (\n  <Box flex=\"1\" id=\"professional-journey\">\n    {/* <Timeline /> */}\n    <Heading as=\"h2\" mb={5} size=\"xl\">\n      Professional Journey\n    </Heading>\n    {aboutMeData.workExperience.map((experience, index) => (\n      <TimelineItem key={index} {...experience} />\n    ))}\n  </Box>\n)\n\nexport default ProfessionalJourneySection\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { Flex, Icon } from '@chakra-ui/react'\n\nconst SkillIcon = ({ icon, label }) => (\n  <Flex\n    py={4}\n    px={2}\n    flexDirection=\"column\"\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    borderWidth=\"1px\"\n    borderRadius=\"lg\"\n    boxShadow=\"md\"\n  >\n    <Icon as={icon} w={10} h={10} m={2} />\n    {label}\n  </Flex>\n)\n\nexport default SkillIcon\n","import React from 'react'\nimport { Flex, Heading, SimpleGrid, Text } from '@chakra-ui/react'\nimport {\n  SiJavascript,\n  SiReact,\n  SiNodedotjs,\n  SiExpress,\n  SiMongodb,\n  SiGraphql,\n  SiGit,\n  SiPython,\n  SiMysql,\n  SiMicrosoftazure,\n  SiSolidity,\n  SiWeb3Dotjs,\n  SiHyperledger,\n} from 'react-icons/si'\n\nimport SkillIcon from '../SkillIcon'\n\nimport aboutMeData from '../../../data/aboutme.json'\n\nconst KeySkillsSection = props => {\n  // Create a mapping of string names to icon components\n  const ICONS_MAP = {\n    JavaScript: SiJavascript,\n    'React.js': SiReact,\n    'Node.js': SiNodedotjs,\n    'Express.js': SiExpress,\n    MongoDB: SiMongodb,\n    GraphQL: SiGraphql,\n    Git: SiGit,\n    Python: SiPython,\n    SQL: SiMysql,\n    Azure: SiMicrosoftazure,\n    Solidity: SiSolidity,\n    'Web3.js': SiWeb3Dotjs,\n    'Hyperledger Fabric': SiHyperledger,\n  }\n\n  return (\n    <Flex id=\"key-skills\" flexDirection=\"column\" mb={5}>\n      <Heading as=\"h1\" size=\"lg\" mb={5}>\n        Key Skills\n      </Heading>\n      <SimpleGrid columns={{ sm: 1, md: 2 }} spacing={5} m={4} my={0}>\n        {/*  columns={{ sm: 1, md: 2, lg: 3 }} */}\n        {Object.keys(aboutMeData.skills).map((entry, index) => (\n          <Flex\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            p={5}\n            key={index}\n            borderWidth=\"1px\"\n            borderRadius=\"lg\"\n            boxShadow=\"md\"\n          >\n            <Text fontSize=\"xl\" mb={8}>\n              <strong>{aboutMeData.skills[entry].title}</strong>\n            </Text>\n\n            <SimpleGrid columns={{ base: 2, lg: 3 }} spacing={6} p={6}>\n              {aboutMeData.skills[entry].skills.map(skill => (\n                <SkillIcon icon={ICONS_MAP[skill]} label={`${skill}`} />\n              ))}\n            </SimpleGrid>\n          </Flex>\n        ))}\n      </SimpleGrid>\n    </Flex>\n  )\n}\nexport default KeySkillsSection\n","import React from 'react'\nimport {\n  Box,\n  Heading,\n  SimpleGrid,\n  Badge,\n  Text,\n  Button,\n  Link as ChakraLink,\n} from '@chakra-ui/react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport aboutMeData from '../../../data/aboutme.json'\n\nconst CertificationsBadgesSection = props => {\n  const AWSCertData = useStaticQuery(graphql`\n    query {\n      pdfs: file(\n        relativePath: {\n          eq: \"AWS Certified Cloud Practitioner certificate - Atharv Kulkarni.pdf\"\n        }\n      ) {\n        publicURL\n      }\n    }\n  `)\n\n  const AWSCertPDF = AWSCertData.pdfs.publicURL\n  return (\n    <Box flex=\"1\" id=\"certifications\" mb={5}>\n      {/* <Timeline /> */}\n      <Heading as=\"h2\" size=\"lg\" mb={5}>\n        Certifications\n      </Heading>\n      <SimpleGrid columns={{ sm: 1, md: 2, lg: 3 }} spacing={5}>\n        {aboutMeData.certifications.map((entry, index) => (\n          <Box\n            key={index}\n            borderWidth=\"1px\"\n            p={4}\n            borderRadius=\"lg\"\n            boxShadow=\"md\"\n          >\n            <Badge colorScheme=\"blue\" mb={2}>\n              {entry.badge}\n            </Badge>\n            <Text fontWeight=\"bold\">{entry.name}</Text>\n            <Text fontSize=\"sm\">{entry.validity}</Text>\n            {entry.verificationURL !== '' ? (\n              <Button colorScheme=\"purple\" variant=\"outline\">\n                <ChakraLink\n                  href={\n                    entry.badge === 'AWS' ? AWSCertPDF : entry.verificationURL\n                  }\n                  target=\"_blank\"\n                  style={{ textDecoration: 'none' }}\n                >\n                  Verify\n                </ChakraLink>\n              </Button>\n            ) : null}\n          </Box>\n        ))}\n      </SimpleGrid>\n      {/* <Flex flexDirection=\"row\" flex=\"1\">\n      {aboutMeData.certifications.map(cert => (\n        // console.log(cert)\n        <Flex\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Box>\n            <Icon\n              as={cert.icon === 'FaAws' ? FaAws : FaMicrosoft}\n              width=\"50px\"\n              height=\"auto\"\n            />\n          </Box>\n          <Box>{cert.name}</Box>\n        </Flex>\n      ))}\n    </Flex> */}\n    </Box>\n  )\n}\n\nexport default CertificationsBadgesSection\n","import React from 'react'\nimport {\n  Box,\n  Heading,\n  Flex,\n  Text,\n  List,\n  ListItem,\n  ListIcon,\n} from '@chakra-ui/react'\nimport { ChevronRightIcon } from '@chakra-ui/icons'\n\nimport aboutMeData from '../../../data/aboutme.json'\n\nconst EducationSection = props => (\n  <Box id=\"education\" mb={5}>\n    <Heading as=\"h2\" mb={5} size=\"lg\">\n      Education\n    </Heading>\n\n    {/* <Flex>\n       <Flex flexDirection=\"column\" alignItems=\"center\">\n        <Box\n          width=\"2px\"\n          height=\"90%\"\n          bg=\"blue.500\"\n          left=\"10px\" // top=\"0\" bottom=\"2\"\n        />\n      </Flex> */}\n    <Flex flexDirection=\"column\" pl={4}>\n      {aboutMeData.education.map(entry => (\n        <>\n          <Heading as=\"h3\" size=\"md\">\n            {entry.degree}\n          </Heading>\n          <Text fontSize=\"md\" mt=\"2\">\n            <i>\n              <a\n                href={entry.instituteWebPageLink}\n                target=\"_blank\"\n                style={{ textDecoration: 'none' }}\n                rel=\"noreferrer\"\n              >\n                {entry.institute}\n              </a>\n            </i>\n            <Text fontSize=\"sm\">{entry.timeline}</Text>\n          </Text>\n          {/* <Text fontSize=\"sm\">\n           <strong>Grade:</strong> {entry.grade}\n         </Text> */}\n          <Text fontWeight=\"bold\" fontSize=\"sm\">\n            Extracurricular Leadership:\n          </Text>\n          <Text fontSize=\"sm\">\n            {entry.extracurricular.map(item => (\n              <List spacing={2} mt={2}>\n                <ListItem>\n                  <ListIcon as={ChevronRightIcon} color=\"arrowColor\" />\n                  {item}\n                </ListItem>\n              </List>\n            ))}\n          </Text>\n        </>\n      ))}\n    </Flex>\n    {/* </Flex> */}\n  </Box>\n)\n\nexport default EducationSection\n","import React from 'react'\nimport { Box, Heading, Flex, List, ListItem, ListIcon } from '@chakra-ui/react'\nimport { ChevronRightIcon } from '@chakra-ui/icons'\n\nimport aboutMeData from '../../../data/aboutme.json'\n\nconst AccoladesSection = props => (\n  <Box flex=\"1\" id=\"accolades\">\n    <Heading as=\"h2\" size=\"lg\" mb={5}>\n      Accolades\n    </Heading>\n    {/* Certifications Details */}\n\n    <Flex>\n      {/* <Flex flexDirection=\"column\" alignItems=\"center\">\n        <Box\n          width=\"2px\"\n          height=\"100%\"\n          bg=\"blue.500\"\n          left=\"10px\" // top=\"0\" bottom=\"2\"\n        />\n      </Flex> */}\n      <Flex px={4}>\n        <List spacing={2}>\n          {aboutMeData.accolades.map(item => (\n            <ListItem>\n              <ListIcon as={ChevronRightIcon} color=\"arrowColor\" />\n              {item}\n            </ListItem>\n          ))}\n        </List>\n      </Flex>\n    </Flex>\n  </Box>\n)\n\nexport default AccoladesSection\n","import React, { useState, useEffect, useRef } from 'react'\nimport {\n  Box,\n  Grid,\n  GridItem,\n  Button,\n  VStack,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport { Link, navigate } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport IntroSection from '../components/AboutComponents/Sections/IntroSection'\nimport ProfessionalJourneySection from '../components/AboutComponents/Sections/ProfessionalJourneySection'\nimport KeySkillsSection from '../components/AboutComponents/Sections/KeySkillsSection'\nimport CertificationsBadgesSection from '../components/AboutComponents/Sections/CertificationsBadgesSection'\nimport EducationSection from '../components/AboutComponents/Sections/EducationSection'\nimport AccoladesSection from '../components/AboutComponents/Sections/AccoladesSection'\n\nconst About = () => {\n  const [activeSection, setActiveSection] = useState('intro')\n  const sectionRefs = useRef({\n    intro: useRef(null),\n    'professional-journey': useRef(null),\n    'key-skills': useRef(null),\n    certifications: useRef(null),\n    education: useRef(null),\n    accolades: useRef(null),\n  })\n\n  const componentsList = [\n    { id: 'intro', title: 'Intro', Component: IntroSection },\n    {\n      id: 'professional-journey',\n      title: 'Professional Journey',\n      Component: ProfessionalJourneySection,\n    },\n    { id: 'key-skills', title: 'Key Skills', Component: KeySkillsSection },\n    {\n      id: 'certifications',\n      title: 'Certifications and Badges',\n      Component: CertificationsBadgesSection,\n    },\n    { id: 'education', title: 'Education', Component: EducationSection },\n    { id: 'accolades', title: 'Accolades', Component: AccoladesSection },\n  ]\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (\n            entry.isIntersecting &&\n            entry.boundingClientRect.top < window.innerHeight / 2\n          ) {\n            setActiveSection(entry.target.id)\n          }\n        })\n      },\n      {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.5,\n      }\n    )\n\n    // Start observing\n    componentsList.forEach(({ id }) => {\n      const el = sectionRefs.current[id].current\n      if (el) observer.observe(el)\n    })\n\n    // Cleanup function\n    return () => {\n      componentsList.forEach(({ id }) => {\n        const el = sectionRefs.current[id].current\n        // Ensure the element is both non-null and was previously observed\n        if (el && observer) observer.unobserve(el)\n      })\n    }\n  }, [componentsList])\n\n  // Active and hover styles\n  const hoverBg = 'gray.600'\n  const hoverColor = 'white'\n  const activeBg = 'gray.800'\n  const activeColor = 'white'\n\n  // Function to handle box click\n  const handleBoxClick = id => {\n    sectionRefs.current[id].current.scrollIntoView({ behavior: 'smooth' })\n    setActiveSection(id) // Update the active section state\n    navigate(`#${id}`) // Navigate using Gatsby's navigate function for hash navigation\n  }\n\n  return (\n    <Layout>\n      <Grid\n        templateColumns={{ base: 'repeat(1, 1fr)', md: '1fr 3fr' }}\n        gap={6}\n        maxHeight=\"75vh\"\n        maxWidth=\"1400px\"\n        mx={4}\n        justifyContent=\"center\"\n      >\n        <GridItem>\n          <VStack align=\"center\" spacing={4} position=\"sticky\" top={0} mt={10}>\n            {componentsList.map(({ id, title }) => (\n              <Box\n                key={id}\n                as=\"button\"\n                onClick={() => handleBoxClick(id)}\n                p={2}\n                bg={activeSection === id ? activeBg : 'transparent'}\n                color={activeSection === id ? activeColor : 'inherit'}\n                _hover={{ bg: hoverBg, color: hoverColor }}\n                borderRadius=\"md\"\n                width=\"80%\"\n                textAlign=\"center\"\n                transition=\"background 0.2s, color 0.2s\" // Smooth transition for background and color\n              >\n                <strong>{title}</strong>\n              </Box>\n            ))}\n          </VStack>\n        </GridItem>\n        <GridItem overflowY=\"auto\">\n          {componentsList.map(({ id, Component }) => (\n            <Box key={id} id={id} ref={sectionRefs.current[id]} py={5}>\n              <Component />\n            </Box>\n          ))}\n        </GridItem>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default About\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport { Badge };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { compact, mapResponsive } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nconst GridItem = forwardRef(\n  function GridItem2(props, ref) {\n    const {\n      area,\n      colSpan,\n      colStart,\n      colEnd,\n      rowEnd,\n      rowSpan,\n      rowStart,\n      ...rest\n    } = props;\n    const styles = compact({\n      gridArea: area,\n      gridColumn: spanFn(colSpan),\n      gridRow: spanFn(rowSpan),\n      gridColumnStart: colStart,\n      gridColumnEnd: colEnd,\n      gridRowStart: rowStart,\n      gridRowEnd: rowEnd\n    });\n    return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n  }\n);\nGridItem.displayName = \"GridItem\";\n\nexport { GridItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mapResponsive } from '@chakra-ui/utils';\nimport { Grid } from './grid.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nimport { getToken } from '../system/hooks.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport { SimpleGrid };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport { VStack };\n"],"names":["_ref","company","role","duration","points","React","Box","position","mb","width","bg","left","top","bottom","pl","Heading","size","as","Text","fontSize","color","List","spacing","mt","map","point","index","ListItem","key","ListIcon","ChevronRightIcon","height","borderRadius","props","SimpleGrid","gridTemplateColumns","sm","md","placeItems","id","Flex","flexDirection","justifyContent","alignItems","maxWidth","StaticImage","src","alt","__imageData","require","flex","aboutMeData","experience","TimelineItem","Object","assign","icon","label","py","px","borderWidth","boxShadow","Icon","w","h","m","ICONS_MAP","JavaScript","SiJavascript","SiReact","SiNodedotjs","SiExpress","MongoDB","SiMongodb","GraphQL","SiGraphql","Git","SiGit","Python","SiPython","SQL","SiMysql","Azure","SiMicrosoftazure","Solidity","SiSolidity","SiWeb3Dotjs","SiHyperledger","columns","my","keys","entry","p","title","base","lg","skills","skill","SkillIcon","AWSCertPDF","useStaticQuery","pdfs","publicURL","Badge","colorScheme","badge","fontWeight","name","validity","verificationURL","Button","variant","ChakraLink","href","target","style","textDecoration","degree","instituteWebPageLink","rel","institute","timeline","extracurricular","item","About","activeSection","setActiveSection","useState","sectionRefs","useRef","intro","certifications","education","accolades","componentsList","Component","IntroSection","ProfessionalJourneySection","KeySkillsSection","CertificationsBadgesSection","EducationSection","AccoladesSection","useEffect","observer","IntersectionObserver","entries","forEach","isIntersecting","boundingClientRect","window","innerHeight","root","rootMargin","threshold","el","current","observe","_ref2","unobserve","Layout","Grid","templateColumns","gap","maxHeight","mx","GridItem","VStack","align","_ref3","onClick","scrollIntoView","behavior","navigate","handleBoxClick","_hover","textAlign","transition","overflowY","_ref4","ref","styles","className","rest","jsx","span","cx","__css","display","whiteSpace","verticalAlign","displayName","spanFn","value","area","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","div","spacingX","spacingY","minChildWidth","theme","_value","n","widthToColumns","count","columnGap","rowGap","direction"],"sourceRoot":""}