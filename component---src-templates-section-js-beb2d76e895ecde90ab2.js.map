{"version":3,"file":"component---src-templates-section-js-beb2d76e895ecde90ab2.js","mappings":"yKAyCA,UAlBwBA,IAAe,IAAd,KAAEC,GAAMD,EAC/B,MAAME,EAAWD,EAAKE,kBAAkBC,MAExC,OACEC,EAAAA,cAACC,EAAAA,EAAG,KACFD,EAAAA,cAAA,UAAKH,EAAS,GAAGK,YAAYC,SAAS,IACtCH,EAAAA,cAACI,EAAAA,EAAI,CAACC,gBAAgB,iBAAiBC,IAAK,EAAGC,eAAe,UAC3DV,EAASW,KAAIC,GACZT,EAAAA,cAACU,EAAAA,EAAW,CACVC,IAAKF,EAAQP,YAAYU,KACzBH,QAASA,EAAQP,iBAInB,C,uDClCV,MAAMD,GAAM,E,OAAA,GAAO,OACnBA,EAAIY,YAAc,K,wFCClB,MAAMT,GAAO,QAAW,SAAeU,EAAOC,GAC5C,MAAM,cACJC,EAAa,IACbV,EAAG,OACHW,EAAM,UACNC,EAAS,OACTC,EAAM,IACNC,EAAG,SACHC,EAAQ,SACRC,EAAQ,aACRC,EAAY,YACZC,EAAW,gBACXnB,KACGoB,GACDX,EACEY,EAAS,CACbC,QAAS,OACTC,kBAAmBZ,EACnBa,QAASvB,EACTwB,WAAYb,EACZc,cAAeb,EACfc,gBAAiBR,EACjBS,WAAYd,EACZe,QAASd,EACTe,aAAcd,EACde,aAAcd,EACde,iBAAkBd,EAClBe,oBAAqBjC,GAEvB,OAAuB,IAAAkC,KAAI,IAAOC,IAAK,CAAEzB,MAAK0B,MAAOf,KAAWD,GAClE,IACArB,EAAKS,YAAc,M","sources":["webpack://atharv-kulkarni/./src/templates/section.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/box/box.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport { Box, Grid } from '@chakra-ui/react'\nimport { graphql } from 'gatsby'\nimport React from 'react'\nimport ProjectCard from '../components/ProjectComponents/ProjectCard.tsx'\n\nexport const query = graphql`\n  query ($section: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { sections: { in: [$section] } } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          slug\n          description\n          sections\n        }\n      }\n    }\n  }\n`\n\nconst SectionTemplate = ({ data }) => {\n  const projects = data.allMarkdownRemark.nodes\n\n  return (\n    <Box>\n      <h1>{projects[0].frontmatter.sections[0]}</h1>\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={4} justifyContent=\"center\">\n        {projects.map(project => (\n          <ProjectCard\n            key={project.frontmatter.slug}\n            project={project.frontmatter}\n          />\n        ))}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default SectionTemplate\n","'use client';\nimport { chakra } from '../system/factory.mjs';\n\nconst Box = chakra(\"div\");\nBox.displayName = \"Box\";\n\nexport { Box };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport { Grid };\n"],"names":["_ref","data","projects","allMarkdownRemark","nodes","React","Box","frontmatter","sections","Grid","templateColumns","gap","justifyContent","map","project","ProjectCard","key","slug","displayName","props","ref","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","div","__css"],"sourceRoot":""}