{"version":3,"file":"component---src-templates-section-js-f2bfeba3c21634d3838b.js","mappings":"6LAQA,MAAMA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,IAmDzB,IAjDoBC,IAAkB,IAAjB,QAAEC,GAASD,EAC9B,MAAME,GAAQC,EAAAA,EAAAA,GAASF,EAAQG,UAE/B,OACEC,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAK,aAAYN,EAAQO,QAC7BH,EAAAA,cAACR,EAAS,CACRY,WAAY,CAAEC,MAAO,KAAMC,UAAW,MACtCC,EAAG,EACHC,KAAK,KACLC,YAAa,EACbC,aAAa,KACbC,SAAS,SACTC,OAAQ,CAAEC,eAAgB,QAC1BC,gBAAgB,kBAEhBd,EAAAA,cAACe,EAAAA,EAAW,CACVC,SAAU,CAAEC,UAAW,SACvBpB,MAAOA,EACPqB,IAAKtB,EAAQuB,QAEfnB,EAAAA,cAACN,EAAAA,GAAG,CAAC0B,EAAE,KACLpB,EAAAA,cAACN,EAAAA,GAAG,CAAC2B,QAAQ,OAAOC,WAAW,YAC7BtB,EAAAA,cAACuB,EAAAA,EAAK,CAACb,aAAa,OAAOc,GAAG,IAAIC,YAAY,UAAS,QAKzDzB,EAAAA,cAACN,EAAAA,GAAG,CACFgC,GAAG,IACHC,GAAI,EACJC,WAAW,OACXC,GAAG,KACHC,SAAS,KACTC,WAAW,QACXC,UAAW,GAEVpC,EAAQuB,OAMXnB,EAAAA,cAACiC,EAAAA,EAAI,KAAErC,EAAQsC,eAGd,C,wECTX,UAlBwBvC,IAAe,IAAd,KAAEwC,GAAMxC,EAC/B,MAAMyC,EAAWD,EAAKE,kBAAkBC,MAExC,OACEtC,EAAAA,cAACN,EAAAA,GAAG,KACFM,EAAAA,cAAA,UAAKoC,EAAS,GAAGG,YAAYC,SAAS,IACtCxC,EAAAA,cAACyC,EAAAA,EAAI,CAACC,gBAAgB,iBAAiBC,IAAK,EAAGC,eAAe,UAC3DR,EAASS,KAAIjD,GACZI,EAAAA,cAAC8C,EAAAA,EAAW,CACVC,IAAKnD,EAAQ2C,YAAYpC,KACzBP,QAASA,EAAQ2C,iBAInB,C,yFClCNE,GAAO,QAAW,SAAeO,EAAOC,GAC1C,MAAM,cACJC,EAAa,IACbP,EAAG,OACHQ,EAAM,UACNC,EAAS,OACTC,EAAM,IACNC,EAAG,SACHC,EAAQ,SACRC,EAAQ,aACRC,EAAY,YACZC,EAAW,gBACXhB,KACGiB,GACDX,EACEY,EAAS,CACbvC,QAAS,OACTwC,kBAAmBX,EACnBY,QAASnB,EACToB,WAAYZ,EACZa,cAAeZ,EACfa,gBAAiBP,EACjBQ,WAAYb,EACZc,QAASb,EACTc,aAAcb,EACdc,aAAcb,EACdc,iBAAkBb,EAClBc,oBAAqB7B,GAEvB,OAAuB,IAAA8B,KAAI,IAAOC,IAAK,CAAExB,MAAKyB,MAAOd,KAAWD,GAClE,IACAlB,EAAKkC,YAAc,M,0FC/BfjF,GAAM,OAAO,OACjBA,EAAIiF,YAAc,MAClB,IAAIC,GAAS,QAAW,SAAiB5B,EAAOC,GAC9C,MAAM,KAAE4B,EAAI,cAAEC,GAAgB,KAASnB,GAASX,EAC1CY,EAASkB,EAAgB,CAAEzD,QAAS,OAAQC,WAAY,SAAUsB,eAAgB,UAAa,CAAC,EACtG,OAAuB,IAAA4B,KACrB9E,EACA,CACEuD,MACA8B,QAASF,EACTH,MAAO,IACFd,EACHoB,WAAY,EACZC,SAAU,MAETtB,GAGT,IACAiB,EAAOD,YAAc,UACR,QAAW,SAAiB3B,EAAOC,GAC9C,MAAM,KAAE4B,KAASlB,GAASX,EAC1B,OAAuB,IAAAwB,KAAII,EAAQ,CAAEC,OAAM5B,MAAKvC,aAAc,YAAaiD,GAC7E,IACOgB,YAAc,Q,uHCrBjBpD,GAAQ,QAAW,SAAgByB,EAAOC,GAC5C,MAAMW,GAAS,QAAe,QAASZ,IACjC,UAAEkC,KAAcvB,IAAS,QAAiBX,GAChD,OAAuB,IAAAwB,KACrB,IAAOW,KACP,CACElC,MACAiC,WAAW,IAAAE,IAAG,eAAgBpC,EAAMkC,cACjCvB,EACHe,MAAO,CACLrD,QAAS,eACTgE,WAAY,SACZC,cAAe,YACZ1B,IAIX,IACArC,EAAMoD,YAAc,O","sources":["webpack://atharv-kulkarni/./src/components/ProjectCard.js","webpack://atharv-kulkarni/./src/templates/section.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-JARCRF6W.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-PULVB27S.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-Z6RXEUPO.mjs"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { Box, Text, Badge } from '@chakra-ui/react'\nimport { motion } from 'framer-motion'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport * as projectsStyles from '../styles/projects.module.scss'\n\nconst MotionBox = motion(Box)\n\nconst ProjectCard = ({ project }) => {\n  const image = getImage(project.imageurl)\n\n  return (\n    <Link to={`/projects/${project.slug}`}>\n      <MotionBox\n        whileHover={{ scale: 1.05, boxShadow: 'lg' }}\n        m={4}\n        maxW=\"sm\"\n        borderWidth={1}\n        borderRadius=\"lg\"\n        overflow=\"hidden\"\n        _hover={{ textDecoration: 'none' }}\n        backgroundColor=\"blackAlpha.200\"\n      >\n        <GatsbyImage\n          imgStyle={{ objectFit: 'cover' }}\n          image={image}\n          alt={project.title}\n        />\n        <Box p=\"6\">\n          <Box display=\"flex\" alignItems=\"baseline\">\n            <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"orange\">\n              New\n            </Badge>\n          </Box>\n\n          <Box\n            mt=\"1\"\n            mb={2}\n            fontWeight=\"bold\"\n            as=\"h2\"\n            fontSize=\"xl\"\n            lineHeight=\"tight\"\n            noOfLines={1}\n          >\n            {project.title}\n          </Box>\n\n          {/* <Text fontWeight=\"bold\"  fontSize=\"xl\" mb={2}>\n            {project.title}\n          </Text> */}\n          <Text>{project.description}</Text>\n        </Box>\n      </MotionBox>\n    </Link>\n  )\n}\n\nexport default ProjectCard\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport { Box, Grid } from '@chakra-ui/react'\nimport ProjectCard from '../components/ProjectCard'\n\nexport const query = graphql`\n  query ($section: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { sections: { in: [$section] } } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          slug\n          description\n          imageurl {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n          sections\n        }\n      }\n    }\n  }\n`\n\nconst SectionTemplate = ({ data }) => {\n  const projects = data.allMarkdownRemark.nodes\n\n  return (\n    <Box>\n      <h1>{projects[0].frontmatter.sections[0]}</h1>\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={4} justifyContent=\"center\">\n        {projects.map(project => (\n          <ProjectCard\n            key={project.frontmatter.slug}\n            project={project.frontmatter}\n          />\n        ))}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default SectionTemplate\n","'use client'\n\n// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n//# sourceMappingURL=chunk-JARCRF6W.mjs.map","'use client'\n\n// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n//# sourceMappingURL=chunk-PULVB27S.mjs.map","'use client'\n\n// src/badge.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport {\n  Badge\n};\n//# sourceMappingURL=chunk-Z6RXEUPO.mjs.map"],"names":["MotionBox","motion","Box","_ref","project","image","getImage","imageurl","React","Link","to","slug","whileHover","scale","boxShadow","m","maxW","borderWidth","borderRadius","overflow","_hover","textDecoration","backgroundColor","GatsbyImage","imgStyle","objectFit","alt","title","p","display","alignItems","Badge","px","colorScheme","mt","mb","fontWeight","as","fontSize","lineHeight","noOfLines","Text","description","data","projects","allMarkdownRemark","nodes","frontmatter","sections","Grid","templateColumns","gap","justifyContent","map","ProjectCard","key","props","ref","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","rest","styles","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","div","__css","displayName","Square","size","centerContent","boxSize","flexShrink","flexGrow","className","span","cx","whiteSpace","verticalAlign"],"sourceRoot":""}