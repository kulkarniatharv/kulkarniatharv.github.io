{"version":3,"file":"component---src-pages-resume-js-b3bee5dd026725e5c864.js","mappings":"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","sources":["webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/container/container.mjs","webpack://atharv-kulkarni/./src/pages/resume.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/badge/badge.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/grid/simple-grid.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/stack/h-stack.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/stack/v-stack.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/tag/tag.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react/dist/esm/wrap/wrap.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Container = forwardRef(\n  function Container2(props, ref) {\n    const { className, centerContent, ...rest } = omitThemingProps(props);\n    const styles = useStyleConfig(\"Container\", props);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-container\", className),\n        ...rest,\n        __css: {\n          ...styles,\n          ...centerContent && {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          }\n        }\n      }\n    );\n  }\n);\nContainer.displayName = \"Container\";\n\nexport { Container };\n","/* eslint-disable new-cap */\n// src/pages/index.js\nimport * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport {\n  Box,\n  Text,\n  Flex,\n  Link,\n  Icon,\n  Heading,\n  VStack,\n  HStack,\n  Badge,\n  Wrap,\n  WrapItem,\n  Tag,\n  SimpleGrid,\n  Container,\n  Button,\n  List,\n  ListItem,\n  ListIcon,\n} from '@chakra-ui/react'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { ChevronRightIcon } from '@chakra-ui/icons'\nimport {\n  FaEnvelope,\n  FaPhoneAlt,\n  FaLinkedin,\n  FaGithub,\n  FaGlobe,\n} from 'react-icons/fa'\n// import { AiOutlinePrinter } from 'react-icons/ai'\nimport { MdFileDownload } from 'react-icons/md'\n// import html2canvas from 'html2canvas'\n// import jsPDF from 'jspdf'\n\nimport Layout from '../components/Layout'\n\nimport '../styles/resume.module.scss'\nimport aboutMeData from '../data/aboutme.json'\n\nconst ResumePage = () => {\n  const ResumePDFData = useStaticQuery(graphql`\n    query {\n      pdfs: file(relativePath: { eq: \"Website Resume - Atharv Kulkarni.pdf\" }) {\n        name\n        publicURL\n      }\n    }\n  `)\n\n  const ResumePDF = ResumePDFData.pdfs.publicURL\n  const ResumePDFName = ResumePDFData.pdfs.name\n\n  return (\n    <Layout>\n      <Container maxW=\"container.md\" p={4}>\n        <Box mb={4} textAlign=\"right\">\n          <Button\n            leftIcon={<MdFileDownload />}\n            colorScheme=\"gray\"\n            variant=\"outline\"\n            _hover={{ bg: 'gray.700', color: 'white' }}\n            size=\"md\"\n            borderWidth=\"1px\"\n            borderColor=\"black\"\n            className=\"download-pdf-button\"\n          >\n            <Link\n              href={ResumePDF}\n              target=\"_blank\"\n              style={{ textDecoration: 'none' }}\n              download={ResumePDFName}\n            >\n              Download as PDF\n            </Link>\n          </Button>\n        </Box>\n        <Box\n          as=\"article\"\n          id=\"resume\"\n          p={4}\n          boxShadow=\"2xl\"\n          borderRadius=\"md\"\n          bg=\"white\"\n        >\n          {/* Intro section */}\n          <Box p={4} className=\"resume-section\">\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              <Box>\n                <Text fontSize=\"4xl\" fontWeight=\"bold\">\n                  Atharv Kulkarni\n                </Text>\n                <Text fontSize=\"md\">\n                  Consultant at IBM, currently immersed in the realms of Workday\n                  integration and AI-driven application development.\n                </Text>\n\n                {/* Contact details */}\n                <Flex alignItems=\"left\" flexDirection=\"column\" mt={4}>\n                  <Box mb={1}>\n                    <Text fontSize=\"sm\">\n                      <Icon as={FaEnvelope} mx={4} />\n                      {aboutMeData.contactInfo.email}\n                    </Text>\n                  </Box>\n\n                  {/* <Box mb={1}>\n                    <Text fontSize=\"sm\">\n                      <Icon as={FaPhoneAlt} mx={4} />\n                      {aboutMeData.contactInfo.phone}\n                    </Text>\n                  </Box> */}\n\n                  <Box mb={1}>\n                    <Link\n                      href={`${aboutMeData.contactInfo.website.link}`}\n                      isExternal\n                    >\n                      <Text fontSize=\"sm\">\n                        <Icon as={FaGlobe} mx={4} />\n                        {aboutMeData.contactInfo.website.text}\n                      </Text>\n                    </Link>\n                  </Box>\n\n                  <Box mb={1}>\n                    <Link\n                      href={`${aboutMeData.contactInfo.linkedin.link}`}\n                      isExternal\n                    >\n                      <Text fontSize=\"sm\">\n                        <Icon as={FaLinkedin} mx={4} />\n                        {aboutMeData.contactInfo.linkedin.text}\n                      </Text>\n                    </Link>\n                  </Box>\n\n                  <Box mb={1}>\n                    <Link\n                      href={`${aboutMeData.contactInfo.github.link}`}\n                      isExternal\n                    >\n                      <Text fontSize=\"sm\">\n                        <Icon as={FaGithub} mx={4} />\n                        {aboutMeData.contactInfo.github.text}\n                      </Text>\n                    </Link>\n                  </Box>\n                </Flex>\n              </Box>\n              <Box maxWidth=\"250px\">\n                <StaticImage\n                  src=\"../assets/images/landingPageImg.png\"\n                  alt=\"Profile Photo\"\n                />\n              </Box>\n            </Flex>\n          </Box>\n\n          {/* About Section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={2}>\n              About\n            </Heading>\n            <Text fontSize=\"md\">\n              I'm <strong>Atharv Kulkarni</strong>, a dynamic and\n              forward-thinking <strong>Consultant at IBM</strong>, currently\n              immersed in the realms of Workday integration and AI-driven\n              application development. With a solid foundation in both\n              technology and business, I bring over a year of comprehensive\n              experience in consulting, paired with an{' '}\n              <strong>expertise in Workday and application development.</strong>\n            </Text>\n          </Box>\n\n          {/* Work experiences */}\n          <Box p={4} className=\"resume-section\">\n            <Heading className=\"item\" as=\"h3\" size=\"lg\" mb={4}>\n              Work Experience\n            </Heading>\n            <VStack spacing={5} align=\"stretch\">\n              {aboutMeData.workExperience.map((experience, index) => (\n                <Box\n                  key={index}\n                  className=\"item\"\n                  borderWidth=\"1px\"\n                  p={4}\n                  borderRadius=\"md\"\n                >\n                  <HStack justifyContent=\"space-between\">\n                    <Text fontWeight=\"bold\">\n                      {experience.role}{' '}\n                      <Badge colorScheme=\"green\" mr={2}>\n                        {experience.badge}\n                      </Badge>\n                    </Text>\n\n                    <Text fontSize=\"sm\">{experience.duration}</Text>\n                  </HStack>\n                  <HStack>\n                    <Text fontSize=\"md\">{experience.company}</Text>\n                  </HStack>\n                  <List spacing={3} mt={6}>\n                    {experience.points.map((point, indexNest) => (\n                      <ListItem key={indexNest} fontSize=\"sm\">\n                        <ListIcon as={ChevronRightIcon} color=\"arrowColor\" />\n                        {point}\n                      </ListItem>\n                    ))}\n                  </List>\n                </Box>\n              ))}\n            </VStack>\n          </Box>\n\n          {/* Certifications section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={4}>\n              Certifications\n            </Heading>\n            <SimpleGrid columns={{ sm: 1, md: 2, lg: 3 }} spacing={5}>\n              {aboutMeData.certifications.map((entry, index) => (\n                <Box\n                  key={index}\n                  borderWidth=\"1px\"\n                  p={4}\n                  borderRadius=\"lg\"\n                  boxShadow=\"md\"\n                >\n                  <Badge colorScheme=\"blue\" mb={2}>\n                    {entry.badge}\n                  </Badge>\n                  <Text fontWeight=\"bold\">{entry.name}</Text>\n                  <Text fontSize=\"sm\">{entry.validity}</Text>\n                </Box>\n              ))}\n            </SimpleGrid>\n          </Box>\n\n          {/* Skills section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={4}>\n              Skills\n            </Heading>\n            <SimpleGrid columns={{ sm: 1, md: 2, lg: 3 }} spacing={5}>\n              {Object.keys(aboutMeData.skills).map((entry, index) => (\n                <Box\n                  key={index}\n                  borderWidth=\"1px\"\n                  p={4}\n                  borderRadius=\"lg\"\n                  boxShadow=\"md\"\n                >\n                  <Badge colorScheme=\"purple\" mb={2}>\n                    {aboutMeData.skills[entry].title}\n                  </Badge>\n                  <Wrap my=\"5\">\n                    {aboutMeData.skills[entry].skills.map(skill => (\n                      <WrapItem key={skill}>\n                        <Tag\n                          size=\"md\"\n                          variant=\"solid\"\n                          colorScheme=\"purple\"\n                          borderRadius=\"full\"\n                        >\n                          {skill}\n                        </Tag>\n                      </WrapItem>\n                    ))}\n                  </Wrap>\n                </Box>\n              ))}\n            </SimpleGrid>\n          </Box>\n\n          {/* Project section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={4}>\n              Projects\n            </Heading>\n            <SimpleGrid columns={{ sm: 1, md: 2, lg: 3 }} spacing={5}>\n              {aboutMeData.projects.map((project, index) => (\n                <Box\n                  key={index}\n                  borderWidth=\"1px\"\n                  p={4}\n                  borderRadius=\"lg\"\n                  boxShadow=\"md\"\n                >\n                  <Badge colorScheme=\"green\" mb={2}>\n                    {project.badge}\n                  </Badge>\n                  <Text fontWeight=\"bold\">{project.name}</Text>\n                  <Text fontSize=\"sm\">{project.description}</Text>\n                </Box>\n              ))}\n            </SimpleGrid>\n          </Box>\n\n          {/* Education section */}\n          <Box p={4} className=\"resume-section\">\n            <Heading as=\"h3\" size=\"lg\" mb={4}>\n              Education\n            </Heading>\n            <VStack spacing={3} align=\"stretch\">\n              {aboutMeData.education.map((entry, index) => (\n                <Box borderWidth=\"1px\" p={4} borderRadius=\"md\">\n                  <Text fontWeight=\"bold\">{entry.institute}</Text>\n                  <Text fontSize=\"sm\">{entry.degree}</Text>\n                  <Text fontSize=\"sm\">{entry.timeline}</Text>\n                  {/* <Text fontSize=\"sm\">Grade: {entry.grade}</Text> */}\n                </Box>\n              ))}\n            </VStack>\n          </Box>\n        </Box>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default ResumePage\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport { Badge };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mapResponsive } from '@chakra-ui/utils';\nimport { Grid } from './grid.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nimport { getToken } from '../system/hooks.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport { SimpleGrid };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst HStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"row\", ref }));\nHStack.displayName = \"HStack\";\n\nexport { HStack };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport { VStack };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext } from '@chakra-ui/utils';\nimport { Icon } from '../icon/icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nconst Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */ jsx(TagStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(chakra.span, { ref, ...ownProps, __css: containerStyles }) });\n});\nTag.displayName = \"Tag\";\nconst TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */ jsx(chakra.span, { ref, noOfLines: 1, ...props, __css: styles.label });\n});\nTagLabel.displayName = \"TagLabel\";\nconst TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginEnd: \"0.5rem\", ...props }));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nconst TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginStart: \"0.5rem\", ...props }));\nTagRightIcon.displayName = \"TagRightIcon\";\nconst TagCloseIcon = (props) => /* @__PURE__ */ jsx(Icon, { verticalAlign: \"inherit\", viewBox: \"0 0 512 512\", ...props, children: /* @__PURE__ */ jsx(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }\n) });\nTagCloseIcon.displayName = \"TagCloseIcon\";\nconst TagCloseButton = forwardRef(\n  (props, ref) => {\n    const { isDisabled, children, ...rest } = props;\n    const styles = useTagStyles();\n    const btnStyles = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.closeButton\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.button,\n      {\n        ref,\n        \"aria-label\": \"close\",\n        ...rest,\n        type: \"button\",\n        disabled: isDisabled,\n        __css: btnStyles,\n        children: children || /* @__PURE__ */ jsx(TagCloseIcon, {})\n      }\n    );\n  }\n);\nTagCloseButton.displayName = \"TagCloseButton\";\n\nexport { Tag, TagCloseButton, TagLabel, TagLeftIcon, TagRightIcon, useTagStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useMemo, Children } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Wrap = forwardRef(function Wrap2(props, ref) {\n  const {\n    spacing = \"0.5rem\",\n    spacingX,\n    spacingY,\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const _children = useMemo(\n    () => shouldWrapChildren ? Children.map(children, (child, index) => /* @__PURE__ */ jsx(WrapItem, { children: child }, index)) : children,\n    [children, shouldWrapChildren]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { ref, className: cx(\"chakra-wrap\", className), ...rest, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      className: \"chakra-wrap__list\",\n      __css: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: justify,\n        alignItems: align,\n        flexDirection: direction,\n        listStyleType: \"none\",\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        padding: \"0\"\n      },\n      children: _children\n    }\n  ) });\n});\nWrap.displayName = \"Wrap\";\nconst WrapItem = forwardRef(\n  function WrapItem2(props, ref) {\n    const { className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.li,\n      {\n        ref,\n        __css: { display: \"flex\", alignItems: \"flex-start\" },\n        className: cx(\"chakra-wrap__listitem\", className),\n        ...rest\n      }\n    );\n  }\n);\nWrapItem.displayName = \"WrapItem\";\n\nexport { Wrap, WrapItem };\n"],"names":["Container","props","ref","className","centerContent","rest","styles","jsx","div","cx","__css","display","flexDirection","alignItems","displayName","ResumePage","ResumePDFData","useStaticQuery","ResumePDF","pdfs","publicURL","ResumePDFName","name","React","Layout","maxW","p","Box","mb","textAlign","Button","leftIcon","MdFileDownload","colorScheme","variant","_hover","bg","color","size","borderWidth","borderColor","Link","href","target","style","textDecoration","download","as","id","boxShadow","borderRadius","Flex","justifyContent","Text","fontSize","fontWeight","mt","Icon","FaEnvelope","mx","aboutMeData","isExternal","FaGlobe","FaLinkedin","FaGithub","maxWidth","StaticImage","src","alt","__imageData","require","Heading","VStack","spacing","align","map","experience","index","key","HStack","role","Badge","mr","badge","duration","company","List","points","point","indexNest","ListItem","ListIcon","ChevronRightIcon","SimpleGrid","columns","sm","md","lg","entry","validity","Object","keys","title","Wrap","my","skills","skill","WrapItem","Tag","project","description","institute","degree","timeline","span","whiteSpace","verticalAlign","spacingX","spacingY","minChildWidth","theme","templateColumns","width","value","_value","n","widthToColumns","count","gap","columnGap","rowGap","direction","TagStylesProvider","useTagStyles","errorMessage","ownProps","containerStyles","container","children","noOfLines","label","I","marginEnd","marginStart","TagCloseIcon","viewBox","fill","d","isDisabled","btnStyles","outline","closeButton","button","type","disabled","justify","shouldWrapChildren","_children","useMemo","Children","child","ul","flexWrap","listStyleType","padding","li"],"sourceRoot":""}