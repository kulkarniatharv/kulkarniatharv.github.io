{"version":3,"file":"component---src-pages-about-js-86458030f9a6e5ef42c6.js","mappings":"sTA2CA,MAAMA,EAAW,CACf,CAAEC,GAAI,QAASC,MAAO,SACtB,CAAED,GAAI,uBAAwBC,MAAO,wBACrC,CACED,GAAI,aACJC,MAAO,cAET,CACED,GAAI,iBACJC,MAAO,kBAET,CAAED,GAAI,YAAaC,MAAO,aAC1B,CAAED,GAAI,mBAAoBC,MAAO,oBACjC,CAAED,GAAI,YAAaC,MAAO,cAKtBC,EAAYC,IAAA,IAAC,KAAEC,EAAI,MAAEC,GAAOF,EAAA,OAChCG,EAAAA,cAACC,EAAAA,EAAI,CACHC,GAAI,EACJC,GAAI,EACJC,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,YAAY,MACZC,aAAa,KACbC,UAAU,MAEVT,EAAAA,cAACU,EAAAA,EAAI,CAACC,GAAIb,EAAMc,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAChCf,EACI,EAIHgB,EAAY,CAChBC,WAAYC,EAAAA,IACZ,WAAYC,EAAAA,IACZ,UAAWC,EAAAA,IACX,aAAcC,EAAAA,IACdC,QAASC,EAAAA,IACTC,QAASC,EAAAA,IACTC,IAAKC,EAAAA,IACLC,OAAQC,EAAAA,IACRC,IAAKC,EAAAA,IACLC,MAAOC,EAAAA,IACPC,SAAUC,EAAAA,IACV,UAAWC,EAAAA,IACX,qBAAsBC,EAAAA,KAGlBC,EAAmBrC,EAAAA,YACvB,CAAAsC,EAA2CC,KAAG,IAA7C,QAAEC,EAAO,SAAEC,EAAQ,SAAEC,EAAQ,QAAEC,GAASL,EAAA,OACvCG,EACEzC,EAAAA,cAAC4C,EAAAA,EAAOC,IAAG,CACTN,IAAKA,EACLO,IAAKN,EAAQ9C,GACbgD,SAAUA,EACVC,QAASA,EACTI,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,WAAY,CAAEC,SAAU,IACxBC,MAAO,CACLC,OAAQ,OACRC,UAAW,OACXC,MAAO,SAGO,UAAfhB,EAAQ9C,IACPM,EAAAA,cAACyD,EAAAA,EAAU,CACTC,oBAAqB,CAAEC,GAAI,MAAOC,GAAI,WACtCC,QAAS,EACTC,WAAW,UAEX9D,EAAAA,cAACC,EAAAA,EAAI,CAACG,cAAc,SAAS2D,GAAI,EAAGzD,eAAe,UACjDN,EAAAA,cAACgE,EAAAA,EAAI,CAACC,GAAI,GAAG,UACbjE,EAAAA,cAACgE,EAAAA,EAAI,CAACC,GAAI,GAAG,OACPjE,EAAAA,cAAA,cAAQ,mBAAyB,oCACpBA,EAAAA,cAAA,cAAQ,qBAA2B,oGAItDA,EAAAA,cAACgE,EAAAA,EAAI,KAAC,yIAGI,IACRhE,EAAAA,cAAA,cAAQ,uDAKZA,EAAAA,cAACC,EAAAA,EAAI,CACHG,cAAc,SACdE,eAAe,SACfD,WAAW,SACX6D,SAAS,QACTD,GAAI,IAGJjE,EAAAA,cAACmE,EAAAA,EAAW,CACVC,IAAI,sCACJC,IAAI,gBAAeC,YAAAC,EAAA,UAMX,yBAAf/B,EAAQ9C,IACPM,EAAAA,cAACwE,EAAAA,GAAG,CAACC,KAAK,IAAI/E,GAAG,wBAEfM,EAAAA,cAAC0E,EAAAA,EAAO,CAAC/D,GAAG,KAAKgE,KAAK,MAAK,wBAG1BC,EAAAA,GAA2BC,KAAI,CAACC,EAAYC,IAC3C/E,EAAAA,cAACgF,EAAYC,OAAAC,OAAA,CAACpC,IAAKiC,GAAWD,OAKpB,eAAftC,EAAQ9C,IACPM,EAAAA,cAACC,EAAAA,EAAI,CAACP,GAAG,aAAaU,cAAc,UAClCJ,EAAAA,cAAC0E,EAAAA,EAAO,CAAC/D,GAAG,KAAKgE,KAAK,MAAK,cAG3B3E,EAAAA,cAACyD,EAAAA,EAAU,CAAC0B,QAAS,CAAExB,GAAI,EAAGC,GAAI,GAAKC,QAAS,EAAG/C,EAAG,GAEnDmE,OAAOG,KAAKR,EAAAA,IAAoBC,KAAI,CAACQ,EAAON,IAC3C/E,EAAAA,cAACC,EAAAA,EAAI,CACHG,cAAc,SACdC,WAAW,SACXiF,EAAG,EACHxC,IAAKiC,EACLxE,YAAY,MACZC,aAAa,KACbC,UAAU,MAEVT,EAAAA,cAACgE,EAAAA,EAAI,CAACuB,SAAS,KAAKtB,GAAI,GACtBjE,EAAAA,cAAA,cAAS4E,EAAAA,GAAmBS,GAAO1F,QAGrCK,EAAAA,cAACyD,EAAAA,EAAU,CAAC0B,QAAS,CAAEK,KAAM,EAAGC,GAAI,GAAK5B,QAAS,EAAGyB,EAAG,GACrDV,EAAAA,GAAmBS,GAAOK,OAAOb,KAAIc,GACpC3F,EAAAA,cAACJ,EAAS,CAACE,KAAMiB,EAAU4E,GAAQ5F,MAAQ,GAAE4F,cAS3C,mBAAfnD,EAAQ9C,IACPM,EAAAA,cAACwE,EAAAA,GAAG,CAACC,KAAK,IAAI/E,GAAG,kBAEfM,EAAAA,cAAC0E,EAAAA,EAAO,CAAC/D,GAAG,KAAKgE,KAAK,MAAK,kBAG3B3E,EAAAA,cAACyD,EAAAA,EAAU,CAAC0B,QAAS,CAAExB,GAAI,EAAGC,GAAI,EAAG6B,GAAI,GAAK5B,QAAS,EAAG+B,GAAG,KAC1DhB,EAAAA,GAA2BC,KAAI,CAACQ,EAAON,IACtC/E,EAAAA,cAACwE,EAAAA,GAAG,CACF1B,IAAKiC,EACLxE,YAAY,MACZ+E,EAAG,EACH9E,aAAa,KACbC,UAAU,MAEVT,EAAAA,cAAC6F,EAAAA,EAAK,CAACC,YAAY,OAAO7B,GAAI,GAC3BoB,EAAMU,OAET/F,EAAAA,cAACgE,EAAAA,EAAI,CAACgC,WAAW,QAAQX,EAAMY,MAC/BjG,EAAAA,cAACgE,EAAAA,EAAI,CAACuB,SAAS,MAAMF,EAAMa,eA0BrB,cAAf1D,EAAQ9C,IACPM,EAAAA,cAACwE,EAAAA,GAAG,CAACoB,GAAI,GAAIlG,GAAG,aACdM,EAAAA,cAAC0E,EAAAA,EAAO,CAAC/D,GAAG,KAAKgE,KAAK,MAAK,aAI3B3E,EAAAA,cAACC,EAAAA,EAAI,KACHD,EAAAA,cAACC,EAAAA,EAAI,CAACG,cAAc,SAASC,WAAW,UACtCL,EAAAA,cAACwE,EAAAA,GAAG,CACFhB,MAAM,MACNF,OAAO,MACP6C,GAAG,WACHC,KAAK,UAGTpG,EAAAA,cAACC,EAAAA,EAAI,CAACG,cAAc,SAASkF,EAAG,GAC7BV,EAAAA,GAAsBC,KAAIQ,GACzBrF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC0E,EAAAA,EAAO,CAAC/D,GAAG,KAAKgE,KAAK,MACnBU,EAAMgB,QAETrG,EAAAA,cAACgE,EAAAA,EAAI,CAACuB,SAAS,KAAKe,GAAG,KACrBtG,EAAAA,cAAA,SACEA,EAAAA,cAAA,KACEuG,KAAMlB,EAAMmB,qBACZC,OAAO,SACPpD,MAAO,CAAEqD,eAAgB,QACzBC,IAAI,cAEHtB,EAAMuB,YAGX5G,EAAAA,cAACgE,EAAAA,EAAI,CAACuB,SAAS,MAAMF,EAAMwB,WAE7B7G,EAAAA,cAACgE,EAAAA,EAAI,CAACuB,SAAS,MACbvF,EAAAA,cAAA,cAAQ,UAAe,IAAEqF,EAAMyB,OAEjC9G,EAAAA,cAACgE,EAAAA,EAAI,CAACgC,WAAW,OAAOT,SAAS,MAAK,+BAGtCvF,EAAAA,cAACgE,EAAAA,EAAI,CAACuB,SAAS,MACZF,EAAM0B,gBAAgBlC,KAAImC,GACzBhH,EAAAA,cAACiH,EAAAA,GAAI,CAACpD,QAAS,EAAGyC,GAAI,GACpBtG,EAAAA,cAACkH,EAAAA,GAAQ,KACPlH,EAAAA,cAACmH,EAAAA,GAAQ,CACPxG,GAAIyG,EAAAA,EACJC,MAAM,eAEPL,aAYL,qBAAfxE,EAAQ9C,IACPM,EAAAA,cAACwE,EAAAA,GAAG,CAACC,KAAK,IAAImB,GAAI,GAAIlG,GAAG,oBACvBM,EAAAA,cAAC0E,EAAAA,EAAO,CAAC/D,GAAG,KAAKgE,KAAK,MAAK,oBAI3B3E,EAAAA,cAACiH,EAAAA,GAAI,CAACpD,QAAS,EAAGyC,GAAI,GACpBtG,EAAAA,cAACyD,EAAAA,EAAU,CAAC0B,QAAS,CAAExB,GAAI,EAAGC,GAAI,EAAG6B,GAAI,GAAK5B,QAAS,GACpDe,EAAAA,EAAqBC,KAAI,CAACyC,EAASvC,IAClC/E,EAAAA,cAACwE,EAAAA,GAAG,CACF1B,IAAKiC,EACLxE,YAAY,MACZ+E,EAAG,EACH9E,aAAa,KACbC,UAAU,MAEVT,EAAAA,cAAC6F,EAAAA,EAAK,CAACC,YAAY,QAAQ7B,GAAI,GAC5BqD,EAAQvB,OAEX/F,EAAAA,cAACgE,EAAAA,EAAI,CAACgC,WAAW,QAAQsB,EAAQrB,MACjCjG,EAAAA,cAACgE,EAAAA,EAAI,CAACuB,SAAS,MAAM+B,EAAQC,mBAQzB,cAAf/E,EAAQ9C,IACPM,EAAAA,cAACwE,EAAAA,GAAG,CAACC,KAAK,IAAImB,GAAI,GAAIlG,GAAG,aACvBM,EAAAA,cAAC0E,EAAAA,EAAO,CAAC/D,GAAG,KAAKgE,KAAK,KAAK2B,GAAI,IAAI,aAKnCtG,EAAAA,cAACC,EAAAA,EAAI,KACHD,EAAAA,cAACC,EAAAA,EAAI,CAACG,cAAc,SAASC,WAAW,UACtCL,EAAAA,cAACwE,EAAAA,GAAG,CACFhB,MAAM,MACNF,OAAO,OACP6C,GAAG,WACHC,KAAK,UAGTpG,EAAAA,cAACC,EAAAA,EAAI,CAACE,GAAI,GACRH,EAAAA,cAACiH,EAAAA,GAAI,CAACpD,QAAS,EAAGyC,GAAI,GACnB1B,EAAAA,GAAsBC,KAAImC,GACzBhH,EAAAA,cAACkH,EAAAA,GAAQ,KACPlH,EAAAA,cAACmH,EAAAA,GAAQ,CAACxG,GAAIyG,EAAAA,EAAkBC,MAAM,eACrCL,UASf,IAAI,IAGNhC,EAAewC,IAAA,IAAC,QAAEC,EAAO,KAAEC,EAAI,SAAEtE,EAAQ,OAAEuE,GAAQH,EAAA,OACvDxH,EAAAA,cAACC,EAAAA,EAAI,CAACgE,GAAI,GACRjE,EAAAA,cAACC,EAAAA,EAAI,CAACG,cAAc,SAASC,WAAW,UACtCL,EAAAA,cAACwE,EAAAA,GAAG,CACFhB,MAAM,OACNF,OAAO,OACP6C,GAAG,WACH3F,aAAa,SAKfR,EAAAA,cAACwE,EAAAA,GAAG,CACFhB,MAAM,MACNF,OAAO,OACP6C,GAAG,WACHC,KAAK,UAGTpG,EAAAA,cAACwE,EAAAA,GAAG,CAACT,GAAI,GACP/D,EAAAA,cAAC0E,EAAAA,EAAO,CAACC,KAAK,KAAKhE,GAAG,KAAKsD,GAAI,GAC5ByD,GAEH1H,EAAAA,cAACgE,EAAAA,EAAI,CAACuB,SAAS,KAAKtB,GAAI,GACtBjE,EAAAA,cAAA,cAASyH,IAEXzH,EAAAA,cAACgE,EAAAA,EAAI,CAACuB,SAAS,KAAK8B,MAAM,WAAWpD,GAAI,GACtCb,GAEHpD,EAAAA,cAACiH,EAAAA,GAAI,CAACpD,QAAS,EAAGyC,GAAI,GACnBqB,EAAO9C,KAAI,CAAC+C,EAAO7C,IAClB/E,EAAAA,cAACkH,EAAAA,GAAQ,CAACpE,IAAKiC,EAAOQ,SAAS,MAC7BvF,EAAAA,cAACmH,EAAAA,GAAQ,CAACxG,GAAIyG,EAAAA,EAAkBC,MAAM,eACrCO,OAKJ,EAiGT,UA9FcC,KACZ,MAAM,EAACC,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,UAAS,GAC7CC,GAAcC,EAAAA,EAAAA,QAAOzI,EAASoF,KAAI,IAAM7E,EAAAA,eACxCmI,GAAcD,EAAAA,EAAAA,QAAO,GAkBrBE,EAAcC,IAClB,MAAMC,EAAoBL,EAAYM,QAAQT,GAAeS,QAC7D,IAAKD,EAAmB,OAExB,MAAM,UAAEE,EAAS,aAAEC,EAAY,aAAEC,GAAiBJ,EAC5CK,EAAWH,EAAYE,GAAgBD,EACvCG,EAAsB,IAAdJ,EAEdL,EAAYI,SAAWF,EAAEQ,OAGrBC,KAAKC,IAAIZ,EAAYI,SA5BH,MA6BhBI,GAAYN,EAAEQ,OAAS,GAAKf,EAAgBrI,EAASuJ,OAAS,EAChEjB,GAAiBkB,GAAqBA,EAAoB,IACjDL,GAASP,EAAEQ,OAAS,GAAKf,EAAgB,GAClDC,GAAiBkB,GAAqBA,EAAoB,IAE5Dd,EAAYI,QAAU,EACxB,EAKF,OACEvI,EAAAA,cAACkJ,EAAAA,EAAM,KACLlJ,EAAAA,cAACC,EAAAA,EAAI,CAACa,EAAG,GAAIqI,UAAWC,EAAAA,IACtBpJ,EAAAA,cAACwE,EAAAA,GAAG,CAAC2E,UAAWC,EAAAA,IAEb3J,EAASoF,KAAI,CAACrC,EAASuC,KACtB/E,SAAAA,cAACqJ,EAAAA,EAAM,CACLvG,IAAKN,EAAQ9C,GACb4J,QAASvE,IAAU+C,EAAgB,QAAU,UAC7ChC,YAAaf,IAAU+C,EAAgB,SAAW,OAClDlH,EAAE,OACFsD,SAAS,QACT5D,eAAe,SACfiJ,UAAU,SACV7C,eAAe,OACfjE,SAAUsC,IAAU+C,EACpB0B,QAASA,IAAMzB,EAAiBhD,GAChC1B,MAAO,CACLL,SAxDUyG,EAwDe1E,EAxDC0E,IAAiB3B,EAwDT,EAAI,IACtC4B,UACE3E,IAAU+C,EAAgB,aAAe,cAE7C3E,WAAW,sDACXwB,KAAK,KACLV,GAAI,GAEHzB,EAAQ7C,OAhEG8J,KAkEf,KAGHzJ,EAAAA,cAACwE,EAAAA,GAAG,CAACrE,GAAI,GAAIwJ,GAAI,GAAIR,UAAWC,EAAAA,IAC9BpJ,EAAAA,cAAC4J,EAAAA,EAAe,KACbnK,EAASoF,KAAI,CAACrC,EAASuC,IACtB/E,EAAAA,cAACqC,EAAgB,CACfS,IAAKN,EAAQ9C,GACb8C,QAASA,EACTC,SAAUsC,IAAU+C,EAEpBnF,QAASyF,EACT7F,IAAK0F,EAAYM,QAAQxD,UAM5B,C,gIC3eN,IAAI8E,EAAY,iCACZC,EAAa,kCAEbC,EAAU,+BACVC,EAAM,0B,sECHC/E,OAAOgF,OAAO,CAC9B,OACA,KACA,KACA,KACA,KACA,QAEF,SAASC,EAAcC,EAAMC,GAC3B,OAAIC,MAAMC,QAAQH,GACTA,EAAKtF,KAAKmC,GAAkB,OAATA,EAAgB,KAAOoD,EAAOpD,MAEtD,QAASmD,GACJlF,OAAOG,KAAK+E,GAAMI,QAAO,CAACC,EAAQ1H,KACvC0H,EAAO1H,GAAOsH,EAAOD,EAAKrH,IACnB0H,IACN,CAAC,GAEM,MAARL,EACKC,EAAOD,GAET,IACT,C,2DCpBI/C,GAAmB,E,QAAA,GAAW,CAChCqD,EAAG,iDACHC,YAAa,oB,6LCOVC,EAAoBC,IAAiB,OAAc,CACtD3E,KAAM,oBACN4E,aAAc,oGAEZ5D,GAAO,QAAW,SAAe6D,EAAOvI,GAC1C,MAAM6G,GAAS,QAAoB,OAAQ0B,IACrC,SACJC,EAAQ,UACRC,EAAY,OAAM,cAClBC,EAAa,QACbpH,KACGqH,IACD,QAAiBJ,GACfK,GAAgB,OAAiBJ,GAEjCK,EAAevH,EAAU,CAAE,kCAAY,CAAEyC,GAAIzC,IAAc,CAAC,EAClE,OAAuB,IAAAwH,KAAIV,EAAoB,CAAEW,MAAOlC,EAAQ2B,UAA0B,IAAAM,KACxF,IAAOE,GACP,CACEhJ,MACAiJ,cAAeR,EACfS,kBAAmBR,EACnBvD,KAAM,OACNgE,MAAO,IAAKtC,EAAOuC,aAAcP,MAC9BF,EACHH,SAAUI,KAGhB,IACAlE,EAAKyD,YAAc,QACD,QAAW,CAACI,EAAOvI,KACnC,MAAM,GAAE5B,KAAOuK,GAASJ,EACxB,OAAuB,IAAAO,KAAIpE,EAAM,CAAE1E,MAAK5B,GAAI,KAAMqK,UAAW,UAAWY,YAAa,SAAUV,GAAO,IAE5FR,YAAc,eACN,QAAW,SAAwBI,EAAOvI,GAC5D,MAAM,GAAE5B,KAAOuK,GAASJ,EACxB,OAAuB,IAAAO,KAAIpE,EAAM,CAAE1E,MAAK5B,GAAI,KAAMqK,UAAW,UAAWY,YAAa,SAAUV,GACjG,IACcR,YAAc,gBAC5B,IAAIxD,GAAW,QAAW,SAAmB4D,EAAOvI,GAClD,MAAM6G,EAASwB,IACf,OAAuB,IAAAS,KAAI,IAAOQ,GAAI,CAAEtJ,SAAQuI,EAAOY,MAAOtC,EAAOpC,MACvE,IACAE,EAASwD,YAAc,WACvB,IAAIvD,GAAW,QAAW,SAAmB2D,EAAOvI,GAClD,MAAM6G,EAASwB,IACf,OAAuB,IAAAS,KAAI,IAAM,CAAE9I,MAAKmF,KAAM,kBAAmBoD,EAAOY,MAAOtC,EAAOtJ,MACxF,IACAqH,EAASuD,YAAc,U,uHCnDnBhG,GAAU,QAAW,SAAkBoG,EAAOvI,GAChD,MAAM6G,GAAS,QAAe,UAAW0B,IACnC,UAAE3B,KAAc+B,IAAS,QAAiBJ,GAChD,OAAuB,IAAAO,KACrB,IAAOS,GACP,CACEvJ,MACA4G,WAAW,IAAA4C,IAAG,iBAAkBjB,EAAM3B,cACnC+B,EACHQ,MAAOtC,GAGb,IACA1E,EAAQgG,YAAc,S,yFChBlBsB,GAAO,QAAW,SAAelB,EAAOvI,GAC1C,MAAM,cACJ0J,EAAa,IACbC,EAAG,OACHC,EAAM,UACNC,EAAS,OACTC,EAAM,IACNC,EAAG,SACHC,EAAQ,SACRC,EAAQ,aACRC,EAAY,YACZC,EAAW,gBACXC,KACGzB,GACDJ,EACE1B,EAAS,CACbwD,QAAS,OACTC,kBAAmBZ,EACnBa,QAASZ,EACTa,WAAYZ,EACZa,cAAeZ,EACfa,gBAAiBP,EACjBQ,WAAYb,EACZc,QAASb,EACTc,aAAcb,EACdc,aAAcb,EACdc,iBAAkBb,EAClB/I,oBAAqBiJ,GAEvB,OAAuB,IAAAtB,KAAI,IAAOxI,IAAK,CAAEN,MAAKmJ,MAAOtC,KAAW8B,GAClE,IACAc,EAAKtB,YAAc,M,uHC1BfjH,GAAa,QACf,SAAqBqH,EAAOvI,GAC1B,MAAM,QAAE4C,EAAO,SAAEoI,EAAQ,SAAEC,EAAQ,QAAE3J,EAAO,cAAE4J,KAAkBvC,GAASJ,EACnE4C,GAAQ,SACRf,EAAkBc,EAkB5B,SAAwBjK,EAAOkK,GAC7B,OAAO,QAAclK,GAAQ8H,IAC3B,MAAMqC,GAAS,QAAS,QAASrC,EAJf,iBADRsC,EAKmCtC,GAJhB,GAAGsC,MAAQA,EAIzB,CAAsCF,GALzD,IAAcE,EAMV,OAAiB,OAAVtC,EAAiB,KAAO,2BAA2BqC,UAAe,GAE7E,CAvB4CE,CAAeJ,EAAeC,IAwBlDI,EAxB0E3I,GAyBzF,QACL2I,GACCxC,GAAoB,OAAVA,EAAiB,KAAO,UAAUA,wBAHjD,IAAwBwC,EAvBpB,OAAuB,IAAAzC,KACrB,IACA,CACE9I,MACA2J,IAAKrI,EACLuI,UAAWmB,EACXpB,OAAQqB,EACRb,qBACGzB,GAGT,IAEFzH,EAAWiH,YAAc,Y,uHCpBrB7E,GAAQ,QAAW,SAAgBiF,EAAOvI,GAC5C,MAAM6G,GAAS,QAAe,QAAS0B,IACjC,UAAE3B,KAAc+B,IAAS,QAAiBJ,GAChD,OAAuB,IAAAO,KACrB,IAAO0C,KACP,CACExL,MACA4G,WAAW,IAAA4C,IAAG,eAAgBjB,EAAM3B,cACjC+B,EACHQ,MAAO,CACLkB,QAAS,eACToB,WAAY,SACZC,cAAe,YACZ7E,IAIX,IACAvD,EAAM6E,YAAc,O,qEC3BpB,SAASwD,EAAiBnD,GACxB,OAAO,EAAAoD,SAASC,QAAQrD,GAAUsD,QAC/BC,IAAU,IAAAC,gBAAeD,IAE9B,C","sources":["webpack://atharv-kulkarni/./src/pages/about.js","webpack://atharv-kulkarni/./src/styles/about.module.scss","webpack://atharv-kulkarni/./node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/icons/dist/chunk-6RTX462E.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-46CXQZ4E.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-7OLJDQMT.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-JARCRF6W.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-NEK3OOAM.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-Z6RXEUPO.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/react-children-utils/dist/index.mjs"],"sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable react/display-name */\nimport React, { useState, useRef } from 'react'\nimport {\n  Box,\n  Flex,\n  Heading,\n  Text,\n  List,\n  ListIcon,\n  ListItem,\n  Button,\n  SimpleGrid,\n  Badge,\n  Link as ChakraLink,\n  Icon,\n} from '@chakra-ui/react'\nimport {\n  SiJavascript,\n  SiReact,\n  SiNodedotjs,\n  SiExpress,\n  SiMongodb,\n  SiGraphql,\n  SiGit,\n  SiPython,\n  SiMysql,\n  SiMicrosoftazure,\n  SiSolidity,\n  SiWeb3Dotjs,\n  SiHyperledger,\n} from 'react-icons/si'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { ChevronRightIcon } from '@chakra-ui/icons'\n\nimport Layout from '../components/Layout'\n// import TimelineItem from '../components/Timeline/TimelineItem'\n\nimport * as styles from '../styles/about.module.scss'\nimport aboutMeData from '../data/aboutme.json'\n\n// Data for the components\nconst sections = [\n  { id: 'about', title: 'About' },\n  { id: 'professional-journey', title: 'Professional Journey' },\n  {\n    id: 'key-skills',\n    title: 'Key Skills',\n  },\n  {\n    id: 'certifications',\n    title: 'Certifications',\n  },\n  { id: 'education', title: 'Education' },\n  { id: 'notable-projects', title: 'Notable Projects' },\n  { id: 'accolades', title: 'Accolades' },\n]\n\n/// ////////////////////////////////////////////////////////////////////////\n\nconst SkillIcon = ({ icon, label }) => (\n  <Flex\n    py={4}\n    px={2}\n    flexDirection=\"column\"\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    borderWidth=\"1px\"\n    borderRadius=\"lg\"\n    boxShadow=\"md\"\n  >\n    <Icon as={icon} w={10} h={10} m={2} />\n    {label}\n  </Flex>\n)\n\n// Create a mapping of string names to icon components\nconst ICONS_MAP = {\n  JavaScript: SiJavascript,\n  'React.js': SiReact,\n  'Node.js': SiNodedotjs,\n  'Express.js': SiExpress,\n  MongoDB: SiMongodb,\n  GraphQL: SiGraphql,\n  Git: SiGit,\n  Python: SiPython,\n  SQL: SiMysql,\n  Azure: SiMicrosoftazure,\n  Solidity: SiSolidity,\n  'Web3.js': SiWeb3Dotjs,\n  'Hyperledger Fabric': SiHyperledger,\n}\n\nconst SectionComponent = React.forwardRef(\n  ({ section, isActive, onScroll, onWheel }, ref) =>\n    isActive ? (\n      <motion.div\n        ref={ref}\n        key={section.id}\n        onScroll={onScroll} // Handle scroll events for overflow\n        onWheel={onWheel} // Handle wheel events when there is no overflow\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.5 }}\n        style={{\n          height: '100%', // Full height of the container\n          overflowY: 'auto', // Scrollable if content overflows\n          width: '100%',\n        }}\n      >\n        {section.id === 'about' && (\n          <SimpleGrid\n            gridTemplateColumns={{ sm: '1fr', md: '2fr 1fr' }}\n            spacing={5}\n            placeItems=\"center\"\n          >\n            <Flex flexDirection=\"column\" pl={4} justifyContent=\"center\">\n              <Text mb={3}>Hello!</Text>\n              <Text mb={3}>\n                I'm <strong>Atharv Kulkarni</strong>, a dynamic and\n                forward-thinking <strong>Consultant at IBM</strong>, currently\n                immersed in the realms of Workday integration and AI-driven\n                application development.\n              </Text>\n              <Text>\n                With a solid foundation in both technology and business, I bring\n                over a year of comprehensive experience in consulting, paired\n                with an{' '}\n                <strong>\n                  expertise in Workday and application development.\n                </strong>\n              </Text>\n            </Flex>\n            <Flex\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              maxWidth=\"350px\"\n              mb={10}\n            >\n              {/* <GatsbyImage image={landingPageImg} alt=\"Profile Photo\" /> */}\n              <StaticImage\n                src=\"../assets/images/landingPageImg.png\"\n                alt=\"Profile Photo\"\n              />\n            </Flex>\n          </SimpleGrid>\n        )}\n\n        {section.id === 'professional-journey' && (\n          <Box flex=\"1\" id=\"professional-journey\">\n            {/* <Timeline /> */}\n            <Heading as=\"h2\" size=\"xl\">\n              Professional Journey\n            </Heading>\n            {aboutMeData.workExperience.map((experience, index) => (\n              <TimelineItem key={index} {...experience} />\n            ))}\n          </Box>\n        )}\n\n        {section.id === 'key-skills' && (\n          <Flex id=\"key-skills\" flexDirection=\"column\">\n            <Heading as=\"h1\" size=\"lg\">\n              Key Skills\n            </Heading>\n            <SimpleGrid columns={{ sm: 1, md: 2 }} spacing={5} m={4}>\n              {/*  columns={{ sm: 1, md: 2, lg: 3 }} */}\n              {Object.keys(aboutMeData.skills).map((entry, index) => (\n                <Flex\n                  flexDirection=\"column\"\n                  alignItems=\"center\"\n                  p={5}\n                  key={index}\n                  borderWidth=\"1px\"\n                  borderRadius=\"lg\"\n                  boxShadow=\"md\"\n                >\n                  <Text fontSize=\"xl\" mb={8}>\n                    <strong>{aboutMeData.skills[entry].title}</strong>\n                  </Text>\n\n                  <SimpleGrid columns={{ base: 2, lg: 3 }} spacing={6} p={6}>\n                    {aboutMeData.skills[entry].skills.map(skill => (\n                      <SkillIcon icon={ICONS_MAP[skill]} label={`${skill}`} />\n                    ))}\n                  </SimpleGrid>\n                </Flex>\n              ))}\n            </SimpleGrid>\n          </Flex>\n        )}\n\n        {section.id === 'certifications' && (\n          <Box flex=\"1\" id=\"certifications\">\n            {/* <Timeline /> */}\n            <Heading as=\"h2\" size=\"xl\">\n              Certifications\n            </Heading>\n            <SimpleGrid columns={{ sm: 1, md: 2, lg: 3 }} spacing={5} my=\"5\">\n              {aboutMeData.certifications.map((entry, index) => (\n                <Box\n                  key={index}\n                  borderWidth=\"1px\"\n                  p={4}\n                  borderRadius=\"lg\"\n                  boxShadow=\"md\"\n                >\n                  <Badge colorScheme=\"blue\" mb={2}>\n                    {entry.badge}\n                  </Badge>\n                  <Text fontWeight=\"bold\">{entry.name}</Text>\n                  <Text fontSize=\"sm\">{entry.validity}</Text>\n                </Box>\n              ))}\n            </SimpleGrid>\n            {/* <Flex flexDirection=\"row\" flex=\"1\">\n              {aboutMeData.certifications.map(cert => (\n                // console.log(cert)\n                <Flex\n                  flexDirection=\"column\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                >\n                  <Box>\n                    <Icon\n                      as={cert.icon === 'FaAws' ? FaAws : FaMicrosoft}\n                      width=\"50px\"\n                      height=\"auto\"\n                    />\n                  </Box>\n                  <Box>{cert.name}</Box>\n                </Flex>\n              ))}\n            </Flex> */}\n          </Box>\n        )}\n\n        {section.id === 'education' && (\n          <Box my={10} id=\"education\">\n            <Heading as=\"h2\" size=\"lg\">\n              Education\n            </Heading>\n\n            <Flex>\n              <Flex flexDirection=\"column\" alignItems=\"center\">\n                <Box\n                  width=\"2px\"\n                  height=\"90%\"\n                  bg=\"blue.500\"\n                  left=\"10px\" // top=\"0\" bottom=\"2\"\n                />\n              </Flex>\n              <Flex flexDirection=\"column\" p={4}>\n                {aboutMeData.education.map(entry => (\n                  <>\n                    <Heading as=\"h3\" size=\"md\">\n                      {entry.degree}\n                    </Heading>\n                    <Text fontSize=\"md\" mt=\"2\">\n                      <i>\n                        <a\n                          href={entry.instituteWebPageLink}\n                          target=\"_blank\"\n                          style={{ textDecoration: 'none' }}\n                          rel=\"noreferrer\"\n                        >\n                          {entry.institute}\n                        </a>\n                      </i>\n                      <Text fontSize=\"sm\">{entry.timeline}</Text>\n                    </Text>\n                    <Text fontSize=\"sm\">\n                      <strong>Grade:</strong> {entry.grade}\n                    </Text>\n                    <Text fontWeight=\"bold\" fontSize=\"sm\">\n                      Extracurricular Leadership:\n                    </Text>\n                    <Text fontSize=\"sm\">\n                      {entry.extracurricular.map(item => (\n                        <List spacing={2} mt={2}>\n                          <ListItem>\n                            <ListIcon\n                              as={ChevronRightIcon}\n                              color=\"arrowColor\"\n                            />\n                            {item}\n                          </ListItem>\n                        </List>\n                      ))}\n                    </Text>\n                  </>\n                ))}\n              </Flex>\n            </Flex>\n          </Box>\n        )}\n\n        {section.id === 'notable-projects' && (\n          <Box flex=\"1\" my={10} id=\"notable-projects\">\n            <Heading as=\"h2\" size=\"lg\">\n              Notable Projects\n            </Heading>\n            {/* Projects Details */}\n            <List spacing={2} mt={2}>\n              <SimpleGrid columns={{ sm: 1, md: 2, lg: 3 }} spacing={5}>\n                {aboutMeData.projects.map((project, index) => (\n                  <Box\n                    key={index}\n                    borderWidth=\"1px\"\n                    p={4}\n                    borderRadius=\"lg\"\n                    boxShadow=\"md\"\n                  >\n                    <Badge colorScheme=\"green\" mb={2}>\n                      {project.badge}\n                    </Badge>\n                    <Text fontWeight=\"bold\">{project.name}</Text>\n                    <Text fontSize=\"sm\">{project.description}</Text>\n                  </Box>\n                ))}\n              </SimpleGrid>\n            </List>\n          </Box>\n        )}\n\n        {section.id === 'accolades' && (\n          <Box flex=\"1\" my={10} id=\"accolades\">\n            <Heading as=\"h2\" size=\"lg\" mt={10}>\n              Accolades\n            </Heading>\n            {/* Certifications Details */}\n\n            <Flex>\n              <Flex flexDirection=\"column\" alignItems=\"center\">\n                <Box\n                  width=\"2px\"\n                  height=\"100%\"\n                  bg=\"blue.500\"\n                  left=\"10px\" // top=\"0\" bottom=\"2\"\n                />\n              </Flex>\n              <Flex px={4}>\n                <List spacing={2} mt={2}>\n                  {aboutMeData.accolades.map(item => (\n                    <ListItem>\n                      <ListIcon as={ChevronRightIcon} color=\"arrowColor\" />\n                      {item}\n                    </ListItem>\n                  ))}\n                </List>\n              </Flex>\n            </Flex>\n          </Box>\n        )}\n      </motion.div>\n    ) : null\n)\n\nconst TimelineItem = ({ company, role, duration, points }) => (\n  <Flex mb={8}>\n    <Flex flexDirection=\"column\" alignItems=\"center\">\n      <Box\n        width=\"20px\"\n        height=\"20px\"\n        bg=\"blue.500\"\n        borderRadius=\"full\"\n        // position=\"absolute\"\n        // left=\"1px\"\n        // top=\"0\"\n      />\n      <Box\n        width=\"2px\"\n        height=\"100%\"\n        bg=\"blue.500\"\n        left=\"10px\" // top=\"0\" bottom=\"2\"\n      />\n    </Flex>\n    <Box pl={4}>\n      <Heading size=\"lg\" as=\"h3\" mb={2}>\n        {role}\n      </Heading>\n      <Text fontSize=\"md\" mb={1}>\n        <strong>{company}</strong>\n      </Text>\n      <Text fontSize=\"sm\" color=\"gray.600\" mb={4}>\n        {duration}\n      </Text>\n      <List spacing={3} mt={6}>\n        {points.map((point, index) => (\n          <ListItem key={index} fontSize=\"sm\">\n            <ListIcon as={ChevronRightIcon} color=\"arrowColor\" />\n            {point}\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  </Flex>\n)\n\nconst About = () => {\n  const [activeSection, setActiveSection] = useState(0)\n  const sectionRefs = useRef(sections.map(() => React.createRef()))\n  const scrollDelta = useRef(0) // To track cumulative scroll delta\n  const scrollThreshold = 200 // Adjust this value to control sensitivity\n\n  const isSectionActive = sectionIndex => sectionIndex === activeSection\n\n  // Handle scroll events\n  const handleScroll = e => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target\n    const atBottom = scrollTop + clientHeight >= scrollHeight\n    const atTop = scrollTop === 0\n\n    if (atBottom && activeSection < sections.length - 1) {\n      setActiveSection(prevActiveSection => prevActiveSection + 1)\n    } else if (atTop && activeSection > 0) {\n      setActiveSection(prevActiveSection => prevActiveSection - 1)\n    }\n  }\n\n  const handleWheel = e => {\n    const currentSectionRef = sectionRefs.current[activeSection].current\n    if (!currentSectionRef) return\n\n    const { scrollTop, scrollHeight, clientHeight } = currentSectionRef\n    const atBottom = scrollTop + clientHeight >= scrollHeight\n    const atTop = scrollTop === 0\n\n    scrollDelta.current += e.deltaY // Accumulate scroll delta\n\n    // Check if we've exceeded our scroll threshold\n    if (Math.abs(scrollDelta.current) > scrollThreshold) {\n      if (atBottom && e.deltaY > 0 && activeSection < sections.length - 1) {\n        setActiveSection(prevActiveSection => prevActiveSection + 1)\n      } else if (atTop && e.deltaY < 0 && activeSection > 0) {\n        setActiveSection(prevActiveSection => prevActiveSection - 1)\n      }\n      scrollDelta.current = 0 // Reset the scroll delta after changing sections\n    }\n  }\n\n  // const debouncedHandleWheel = debounce(handleWheel, 200) // Adjust the 200ms delay as needed\n\n  return (\n    <Layout>\n      <Flex m={10} className={styles.aboutPage}>\n        <Box className={styles.toc}>\n          {/* Table of Contents */}\n          {sections.map((section, index) => (\n            <Button\n              key={section.id}\n              variant={index === activeSection ? 'solid' : 'outline'}\n              colorScheme={index === activeSection ? 'purple' : 'blue'}\n              w=\"100%\"\n              maxWidth=\"280px\"\n              justifyContent=\"center\"\n              textAlign=\"center\"\n              textDecoration=\"none\"\n              isActive={index === activeSection}\n              onClick={() => setActiveSection(index)}\n              style={{\n                opacity: isSectionActive(index) ? 1 : 0.9,\n                transform:\n                  index === activeSection ? 'scale(1.0)' : 'scale(0.9)',\n              }}\n              transition=\"transform 0.2s ease-in-out, filter 0.2s ease-in-out\"\n              size=\"lg\"\n              mb={3}\n            >\n              {section.title}\n            </Button>\n          ))}\n        </Box>\n\n        <Box px={10} mx={10} className={styles.content}>\n          <AnimatePresence>\n            {sections.map((section, index) => (\n              <SectionComponent\n                key={section.id}\n                section={section}\n                isActive={index === activeSection}\n                // onScroll={handleScroll}\n                onWheel={handleWheel}\n                ref={sectionRefs.current[index]} // Pass the ref for the section\n              />\n            ))}\n          </AnimatePresence>\n        </Box>\n      </Flex>\n    </Layout>\n  )\n}\n\nexport default About\n","// extracted by mini-css-extract-plugin\nexport var aboutPage = \"about-module--aboutPage--bb0c2\";\nexport var activeLink = \"about-module--activeLink--0e3ee\";\nexport var badge = \"about-module--badge--eb37f\";\nexport var content = \"about-module--content--ce717\";\nexport var toc = \"about-module--toc--40656\";","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","'use client'\n\n// src/ChevronRight.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ChevronRightIcon = createIcon({\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\",\n  displayName: \"ChevronRightIcon\"\n});\n\nexport {\n  ChevronRightIcon\n};\n//# sourceMappingURL=chunk-6RTX462E.mjs.map","'use client'\n\n// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n//# sourceMappingURL=chunk-46CXQZ4E.mjs.map","'use client'\n\n// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n//# sourceMappingURL=chunk-7OLJDQMT.mjs.map","'use client'\n\n// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n//# sourceMappingURL=chunk-JARCRF6W.mjs.map","'use client'\nimport {\n  Grid\n} from \"./chunk-JARCRF6W.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n//# sourceMappingURL=chunk-NEK3OOAM.mjs.map","'use client'\n\n// src/badge.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport {\n  Badge\n};\n//# sourceMappingURL=chunk-Z6RXEUPO.mjs.map","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n"],"names":["sections","id","title","SkillIcon","_ref","icon","label","React","Flex","py","px","flexDirection","alignItems","justifyContent","borderWidth","borderRadius","boxShadow","Icon","as","w","h","m","ICONS_MAP","JavaScript","SiJavascript","SiReact","SiNodedotjs","SiExpress","MongoDB","SiMongodb","GraphQL","SiGraphql","Git","SiGit","Python","SiPython","SQL","SiMysql","Azure","SiMicrosoftazure","Solidity","SiSolidity","SiWeb3Dotjs","SiHyperledger","SectionComponent","_ref2","ref","section","isActive","onScroll","onWheel","motion","div","key","initial","opacity","animate","exit","transition","duration","style","height","overflowY","width","SimpleGrid","gridTemplateColumns","sm","md","spacing","placeItems","pl","Text","mb","maxWidth","StaticImage","src","alt","__imageData","require","Box","flex","Heading","size","aboutMeData","map","experience","index","TimelineItem","Object","assign","columns","keys","entry","p","fontSize","base","lg","skills","skill","my","Badge","colorScheme","badge","fontWeight","name","validity","bg","left","degree","mt","href","instituteWebPageLink","target","textDecoration","rel","institute","timeline","grade","extracurricular","item","List","ListItem","ListIcon","ChevronRightIcon","color","project","description","_ref3","company","role","points","point","About","activeSection","setActiveSection","useState","sectionRefs","useRef","scrollDelta","handleWheel","e","currentSectionRef","current","scrollTop","scrollHeight","clientHeight","atBottom","atTop","deltaY","Math","abs","length","prevActiveSection","Layout","className","styles","Button","variant","textAlign","onClick","sectionIndex","transform","mx","AnimatePresence","aboutPage","activeLink","content","toc","freeze","mapResponsive","prop","mapper","Array","isArray","reduce","result","d","displayName","ListStylesProvider","useListStyles","errorMessage","props","children","styleType","stylePosition","rest","validChildren","spacingStyle","jsx","value","ul","listStyleType","listStylePosition","__css","container","marginStart","li","h2","cx","Grid","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","spacingX","spacingY","minChildWidth","theme","_value","n","widthToColumns","count","span","whiteSpace","verticalAlign","getValidChildren","Children","toArray","filter","child","isValidElement"],"sourceRoot":""}