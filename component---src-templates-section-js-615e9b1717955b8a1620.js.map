{"version":3,"file":"component---src-templates-section-js-615e9b1717955b8a1620.js","mappings":"2KAQA,MAAMA,GAAYC,E,QAAAA,GAAOC,EAAAA,IAuEzB,IArEoBC,IAAA,IAAC,QAAEC,GAASD,EAAA,OAG9BE,EAAAA,cAACL,EAAS,CACRM,WAAY,CACVC,MAAO,MAGTC,EAAG,EACHC,KAAK,KACLC,SAAS,SACTC,OAAQ,CAAEC,eAAgB,QAC1BC,UAAU,KACVC,aAAa,QAMbT,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAK,aAAYZ,EAAQa,QAM7BZ,EAAAA,cAACH,EAAAA,GAAG,CAACgB,EAAE,KACLb,EAAAA,cAACH,EAAAA,GAAG,CACFiB,GAAG,IACHC,GAAI,EACJC,WAAW,OACXC,GAAG,KACHC,SAAS,KACTC,WAAW,QACXC,UAAW,GAEXpB,EAAAA,cAACH,EAAAA,GAAG,CAACwB,SAAS,WAAWC,QAAQ,gBAC9BvB,EAAQwB,MACTvB,EAAAA,cAACH,EAAAA,GAAG,CACFoB,GAAG,OACHI,SAAS,WACTG,OAAO,IACPC,KAAK,IACLC,MAAM,IACNC,OAAO,SACPC,WAAa,gBAAe7B,EAAQ8B,6BAA6B9B,EAAQ8B,4BACzEpB,aAAa,KACbqB,QAAS,MAGU,KAAtB/B,EAAQgC,UACP/B,EAAAA,cAACgC,EAAAA,EAAK,CACJvB,aAAa,OACbwB,GAAG,IACHC,GAAG,IACHC,YAAapC,EAAQ8B,qBACrBX,SAAS,MAERnB,EAAQgC,WAGb,MAEF/B,EAAAA,cAACoC,EAAAA,EAAI,CAAClB,SAAS,MAAMnB,EAAQsC,eAInC,C,0EC9BF,UAlBwBvC,IAAe,IAAd,KAAEwC,GAAMxC,EAC/B,MAAMyC,EAAWD,EAAKE,kBAAkBC,MAExC,OACEzC,EAAAA,cAACH,EAAAA,GAAG,KACFG,EAAAA,cAAA,UAAKuC,EAAS,GAAGG,YAAYC,SAAS,IACtC3C,EAAAA,cAAC4C,EAAAA,EAAI,CAACC,gBAAgB,iBAAiBC,IAAK,EAAGC,eAAe,UAC3DR,EAASS,KAAIjD,GACZC,EAAAA,cAACiD,EAAAA,EAAW,CACVC,IAAKnD,EAAQ2C,YAAY9B,KACzBb,QAASA,EAAQ2C,iBAInB,C,iIC9BNN,GAAO,QAAW,SAAee,EAAOC,GAC1C,MAAMC,GAAS,QAAe,OAAQF,IAChC,UAAEG,EAAS,MAAEC,EAAK,WAAEC,EAAU,OAAEC,KAAWC,IAAS,QAAiBP,GACrEQ,GAAe,OAAQ,CAC3BC,UAAWT,EAAMI,MACjBhD,eAAgB4C,EAAMK,WACtBK,cAAeV,EAAMM,SAEvB,OAAuB,IAAAK,KACrB,IAAOjD,EACP,CACEuC,MACAE,WAAW,IAAAS,IAAG,cAAeZ,EAAMG,cAChCK,KACAD,EACHM,MAAOX,GAGb,IACAjB,EAAK6B,YAAc,M,yFCvBfrB,GAAO,QAAW,SAAeO,EAAOC,GAC1C,MAAM,cACJc,EAAa,IACbpB,EAAG,OACHqB,EAAM,UACNC,EAAS,OACTC,EAAM,IACNC,EAAG,SACHC,EAAQ,SACRC,EAAQ,aACRC,EAAY,YACZC,EAAW,gBACX7B,KACGa,GACDP,EACEE,EAAS,CACb/B,QAAS,OACTqD,kBAAmBT,EACnBU,QAAS9B,EACT+B,WAAYV,EACZW,cAAeV,EACfW,gBAAiBL,EACjBM,WAAYX,EACZY,QAASX,EACTY,aAAcX,EACdY,aAAcX,EACdY,iBAAkBX,EAClBY,oBAAqBxC,GAEvB,OAAuB,IAAAiB,KAAI,IAAOwB,IAAK,CAAElC,MAAKY,MAAOX,KAAWK,GAClE,IACAd,EAAKqB,YAAc,M,0FC/BfpE,GAAM,OAAO,OACjBA,EAAIoE,YAAc,MAClB,IAAIsB,GAAS,QAAW,SAAiBpC,EAAOC,GAC9C,MAAM,KAAEoC,EAAI,cAAEC,GAAgB,KAAS/B,GAASP,EAC1CE,EAASoC,EAAgB,CAAEnE,QAAS,OAAQoE,WAAY,SAAU3C,eAAgB,UAAa,CAAC,EACtG,OAAuB,IAAAe,KACrBjE,EACA,CACEuD,MACAuC,QAASH,EACTxB,MAAO,IACFX,EACHuC,WAAY,EACZC,SAAU,MAETnC,GAGT,IACA6B,EAAOtB,YAAc,UACR,QAAW,SAAiBd,EAAOC,GAC9C,MAAM,KAAEoC,KAAS9B,GAASP,EAC1B,OAAuB,IAAAW,KAAIyB,EAAQ,CAAEC,OAAMpC,MAAK3C,aAAc,YAAaiD,GAC7E,IACOO,YAAc,Q,uHCrBjBjC,GAAQ,QAAW,SAAgBmB,EAAOC,GAC5C,MAAMC,GAAS,QAAe,QAASF,IACjC,UAAEG,KAAcI,IAAS,QAAiBP,GAChD,OAAuB,IAAAW,KACrB,IAAOgC,KACP,CACE1C,MACAE,WAAW,IAAAS,IAAG,eAAgBZ,EAAMG,cACjCI,EACHM,MAAO,CACL1C,QAAS,eACTyE,WAAY,SACZC,cAAe,YACZ3C,IAIX,IACArB,EAAMiC,YAAc,O,uBC5BpB,SAASgC,EAAQC,GACf,MAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAIhD,KAAOiD,OACK,IAAfA,EAAMjD,WACDiD,EAAMjD,GAEjB,OAAOiD,CACT,C","sources":["webpack://atharv-kulkarni/./src/components/ProjectComponents/ProjectCard.js","webpack://atharv-kulkarni/./src/templates/section.js","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-2OOHT3W5.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-JARCRF6W.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-PULVB27S.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/layout/dist/chunk-Z6RXEUPO.mjs","webpack://atharv-kulkarni/./node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { Box, Text, Badge } from '@chakra-ui/react'\nimport { motion } from 'framer-motion'\n// import { GatsbyImage, getImage } from 'gatsby-plugin-image'\n// import * as projectsStyles from '../../styles/projects.module.scss'\n\nconst MotionBox = motion(Box)\n\nconst ProjectCard = ({ project }) => (\n  // const image = getImage(project.imageurl)\n\n  <MotionBox\n    whileHover={{\n      scale: 1.05,\n      // boxShadow: 'lg'\n    }}\n    m={4}\n    maxW=\"sm\"\n    overflow=\"hidden\"\n    _hover={{ textDecoration: 'none' }}\n    boxShadow=\"md\"\n    borderRadius=\"10px\"\n    // style={{\n    //   boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n    //   borderRadius: '10px',\n    // }}\n  >\n    <Link to={`/projects/${project.slug}`}>\n      {/* <GatsbyImage\n            imgStyle={{ objectFit: 'cover' }}\n            image={image}\n            alt={project.title}\n          /> */}\n      <Box p=\"6\">\n        <Box\n          mt=\"1\"\n          mb={2}\n          fontWeight=\"bold\"\n          as=\"h2\"\n          fontSize=\"lg\"\n          lineHeight=\"tight\"\n          noOfLines={2}\n        >\n          <Box position=\"relative\" display=\"inline-block\">\n            {project.title}\n            <Box\n              as=\"span\"\n              position=\"absolute\"\n              bottom=\"0\"\n              left=\"0\"\n              right=\"0\"\n              height=\"0.2rem\"\n              bgGradient={`linear(to-r, ${project.cardBadgeColorScheme}.400, ${project.cardBadgeColorScheme}.200)`}\n              borderRadius=\"sm\"\n              opacity={0.5}\n            />\n          </Box>\n          {project.cardBadge !== '' ? (\n            <Badge\n              borderRadius=\"full\"\n              px=\"2\"\n              ml=\"2\"\n              colorScheme={project.cardBadgeColorScheme}\n              fontSize=\"xs\"\n            >\n              {project.cardBadge}\n            </Badge>\n          ) : // </Box>\n          null}\n        </Box>\n        <Text fontSize=\"sm\">{project.description}</Text>\n      </Box>\n    </Link>\n  </MotionBox>\n  // </Link>\n)\n\nexport default ProjectCard\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport { Box, Grid } from '@chakra-ui/react'\nimport ProjectCard from '../components/ProjectComponents/ProjectCard'\n\nexport const query = graphql`\n  query ($section: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { sections: { in: [$section] } } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          slug\n          description\n          imageurl {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n          sections\n        }\n      }\n    }\n  }\n`\n\nconst SectionTemplate = ({ data }) => {\n  const projects = data.allMarkdownRemark.nodes\n\n  return (\n    <Box>\n      <h1>{projects[0].frontmatter.sections[0]}</h1>\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={4} justifyContent=\"center\">\n        {projects.map(project => (\n          <ProjectCard\n            key={project.frontmatter.slug}\n            project={project.frontmatter}\n          />\n        ))}\n      </Grid>\n    </Box>\n  )\n}\n\nexport default SectionTemplate\n","'use client'\n\n// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n//# sourceMappingURL=chunk-2OOHT3W5.mjs.map","'use client'\n\n// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n//# sourceMappingURL=chunk-JARCRF6W.mjs.map","'use client'\n\n// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n//# sourceMappingURL=chunk-PULVB27S.mjs.map","'use client'\n\n// src/badge.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport {\n  Badge\n};\n//# sourceMappingURL=chunk-Z6RXEUPO.mjs.map","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["MotionBox","motion","Box","_ref","project","React","whileHover","scale","m","maxW","overflow","_hover","textDecoration","boxShadow","borderRadius","Link","to","slug","p","mt","mb","fontWeight","as","fontSize","lineHeight","noOfLines","position","display","title","bottom","left","right","height","bgGradient","cardBadgeColorScheme","opacity","cardBadge","Badge","px","ml","colorScheme","Text","description","data","projects","allMarkdownRemark","nodes","frontmatter","sections","Grid","templateColumns","gap","justifyContent","map","ProjectCard","key","props","ref","styles","className","align","decoration","casing","rest","aliasedProps","textAlign","textTransform","jsx","cx","__css","displayName","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","div","Square","size","centerContent","alignItems","boxSize","flexShrink","flexGrow","span","whiteSpace","verticalAlign","compact","object","clone","Object","assign"],"sourceRoot":""}